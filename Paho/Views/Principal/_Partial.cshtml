@model Paho.Models.PrincipalViewModel
<!-- ko with: app.Views.Principal -->

<!-- #### CAFQ
<div>Div de control</div>
<div>ResourcesM.ResourcesM.testMessage</div>
-->

@if (ViewBag.UsrCtry > 0)
{
<div class="row rowform" data-bind="visibility: true" style="margin-left:5px;">
        <!--div class="col-md-10"-->
        <!--div class="col-md-9"-->

        <style>
                /*.axis--x path {
                display: none;
            }*/

                .grid .tick {
                    stroke: lightgrey;
                    stroke-opacity: 0.7;
                    shape-rendering: crispEdges;
                }

                .grid path {
                    stroke-width: 0;
                }

                .line {
                    fill: none;
                    stroke: steelblue;
                    stroke-width: 1.5px;
                }
        </style>

        <!--script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
        <script src="https://www.amcharts.com/lib/3/serial.js"></script>
        <script src="https://www.amcharts.com/lib/3/themes/light.js"></script>
        <script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
        <link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" /-->

        <script src="~/Scripts/amcharts/amcharts.js"></script>
        <script src="~/Scripts/amcharts/serial.js"></script>
        <script src="~/Scripts/amcharts/pie.js"></script>
        <script src="~/Scripts/amcharts/themes/light.js"></script>
        <script src="~/Scripts/amcharts/plugins/export/export.min.js"></script>
        <script src="~/Scripts/ammap/ammap.js"></script>
        <link rel="stylesheet" href="~/Scripts/amcharts/plugins/export/export.css" type="text/css" media="all" />
        
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 7 - Lineas Basalesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <script>
                var jsonX;

                function GetGraphData7() {
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 1;
                    var dataEti = 0;

                    //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                    var allVals = [];
                    var yrs = "";
                    $("#divGraph7").hide();
                    $("#loaderGraph7").show();
                    $('#c_b7 :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios7").val(yrs);

                    //alert($("#anios").val());
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            //url: '/Graph/GetGraphDataSample2',
                            //data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph7','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "'}",
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph7','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph7").show();
                                $("#loaderGraph7").hide();
                                var json_obj = JSON.parse(data);
                                jsonX = JSON.parse(data);
                                $("#divPrueba7").show();
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2,
                                            serie3: element2.serie3,
                                            serie4: element2.serie4
                                        });
                                    });

                                });

                                var chart = AmCharts.makeChart("divGraph7", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                        },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                        }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid":true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "position": "left",
                                        "title":jsonX.graph.graphYAxisTitle
                                        }],
                                    "graphs": [{
                                        "valueAxis": "v1",
                                        "lineColor": "#2F75B5",
                                        "lineThickness": 2,
                                        "bullet": "round",
                                        "bulletBorderThickness": 1,
                                        "hideBulletsCount": 20,
                                        "title": jsonX.graph.graphSeries1Label,
                                        "valueField": "serie1",
                                        "type": "line",
                                        "fillAlphas": 0
                                        }, {
                                        "valueAxis": "v1",
                                        "lineColor": "#FF0000",
                                        "lineThickness": 2,
                                        "bullet": "square",
                                        "bulletBorderThickness": 1,
                                        "hideBulletsCount": 20,
                                        "title": jsonX.graph.graphSeries2Label,
                                        "valueField": "serie2",
                                        "type": "line",
                                        "fillAlphas": 0
                                        }, {
                                        "valueAxis": "v1",
                                        "lineColor": "#808080",
                                        "lineThickness": 2,
                                        "bullet": "triangleUp",
                                        "bulletBorderThickness": 1,
                                        "hideBulletsCount": 20,
                                        "title": jsonX.graph.graphSeries3Label,
                                        "valueField": "serie3",
                                        "type": "line",
                                        "fillAlphas": 0
                                        }, {
                                        "valueAxis": "v1",
                                        "lineColor": "#009900",
                                        "lineThickness": 2,
                                        "bullet": "triangleUp",
                                        "bulletBorderThickness": 1,
                                        "hideBulletsCount": 20,
                                        "title": jsonX.graph.graphSeries4Label,
                                        "valueField": "serie4",
                                        "type": "line",
                                        "fillAlphas": 0
                                        }],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                        },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                    },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                                "menu": [{
                                                    "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                    "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                                },
                                                {
                                                    "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                    "format": "PRINT"
                                                }]
                                            }]
                                    }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };
        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 100%;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph7 {
                display: none;
                width: 100%;
                height: 620px;
            }

            #containerGraph7 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }

            #LBPais {
                display: block;
                /*background: rgba( 236, 236, 236, 1);*/
                /*width: 140px;*/
                font-weight: bold;
                margin: 5px;
            }
        </style>

        <div id="containerGraph7">
            <!--
            <div class="col-md-6">
                <span id="LBPais">
                    País: @((ViewBag.UsrCtry == 7) ? "CHILE" : (ViewBag.UsrCtry == 9) ? "COSTA RICA" : "BOLIVIA")
                </span>
            </div>-->
            <div id="loaderGraph7" class="loaderGraph"></div>
            <div id="divGraph7"></div>
        </div>

        <!--<script>GetGraphData7();</script>-->
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 7 - Lineas Basales xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 8 - Indicadores de Desempeño xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
                var jsonX;
                //cIndi3 = "Porcentaje de casos de IRAG con muestra de laboratorio.";
                var cIndi3_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioCasosIRAGMuestraLaboratorio"))";
                cIndi3_e = caracteresEspeciales(cIndi3_e);

                //var cIndi4 = "Porcentaje de pacientes con resultado virológico reportado.";
                var cIndi4_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioPorcePacieResultadoVirologico"))";
                cIndi4_e = caracteresEspeciales(cIndi4_e);

                //var cIndi5 = "Porcentaje de casos cerrados de IRAG medidos por la variable de condición de egreso del paciente.";
                var cIndi5_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioPorcCasosCerradosIRAG"))";
                cIndi5_e = caracteresEspeciales(cIndi5_e);

                //var cIndi6 = "Mediana entre la recolección de muestras y su recepción en laboratorio.";
                var cIndi6_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioMedianaRecoleccionMuestraRecepcionLaboratorio"))";
                cIndi6_e = caracteresEspeciales(cIndi6_e);

                //cIndi7 = "Mediana entre la recepcion de la muestra en laboratorio y la notificación de los resultados.";
                var cIndi7_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioMedianaRecepcionMuestraNotificacionResultado"))";
                cIndi7_e = caracteresEspeciales(cIndi7_e);

                //cIndi8 = "Mediana entre la fecha de hospitalizacion y la fecha de notificacion en el sistema de vigilancia.";
                var cIndi8_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioMedianaFechaHospitalizacionFechaNotificacion"))";
                cIndi8_e = caracteresEspeciales(cIndi8_e);

                //var cIndi9 = "Mediana entre la fecha de inicio de sintomas y la fecha de inicio de tratamiento antiviral.";
                var cIndi9_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioMedianaInicioSintomasInicioTratamientoAntiviral"))";
                cIndi9_e = caracteresEspeciales(cIndi9_e);

                //var cIndi10 = "Mediana entre la fecha de inicio de sintomas y la fecha de toma de muestras.";
                var cIndi10_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioMedianaInicioSintomasFechaTomaMuestra"))";
                cIndi10_e = caracteresEspeciales(cIndi10_e);

                var cIndi_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioIndicador"))";
                var cMeta_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioMeta"))";
                var cResu_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioResultado"))";

                var cDia_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioDia"))";
                cDia_e = caracteresEspeciales(cDia_e);

                var cDias_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioDias"))";

                var cInDe_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioIndicadoresDeDesempenio"))";
                cInDe_e = caracteresEspeciales(cInDe_e);

                var cHora_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioHora"))";
                var cHoras_e = "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("msgIndicaDesempenioHoras"))";

                function caracteresEspeciales(cadena){
                    var aCaEn = new Array("&#225;", "&#233;", "&#237;", "&#243;", "&#250;", "&#241;");
                    var aCaDe = new Array("á", "é", "í", "ó", "ú", "ñ");

                    for (i = 0; i < aCaEn.length; i++) {
                        var pos = cadena.search(aCaEn[i]);

                        while (pos > -1) {
                            cadena = cadena.replace(aCaEn[i], aCaDe[i]);
                            pos = cadena.search(aCaEn[i]);
                        }
                    }

                    return cadena;
                }

                function GetGraphData8(){
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 1;
                    var dataEti = 0;
                    //****
                    /*$("#divGraph8").hide();
                    $("#divTable8").hide();
                    $("#loaderGraph8").show();*/
                    //****
                    var allVals = [];
                    var yrs = (new Date).getFullYear();

                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + yrs.toString() + "','Graph':'Graph8','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data){
                                /*$("#divGraph8").show();
                                $("#divTable8").show();
                                $("#loaderGraph8").hide();*/
                                //****
                                var json_obj = JSON.parse(data);

                                $("#IDTitulo1").text(cInDe_e);
                                $("#indicador").text(cIndi_e);
                                $("#meta").text(cMeta_e);
                                $("#resultado").text(cResu_e);
                                $("#indicador3").text(cIndi3_e);
                                $("#indicador4").text(cIndi4_e);
                                $("#indicador5").text(cIndi5_e);
                                $("#indicador6").text(cIndi6_e);
                                $("#indicador7").text(cIndi7_e);
                                $("#indicador8").text(cIndi8_e);
                                $("#indicador9").text(cIndi9_e);
                                $("#indicador10").text(cIndi10_e);
                                $("#IDTitulo2").text(json_obj[0]);

                                var t = FormatearMeta(json_obj[11]);
                                $("#IDMeta3").text(t[1]);
                                var nMeta3 = t[0];
                                var cUnid3 = t[2];

                                var t = FormatearMeta(json_obj[12]);
                                $("#IDMeta4").text(t[1]);
                                var nMeta4 = t[0];
                                var cUnid4 = t[2];

                                var t = FormatearMeta(json_obj[13]);
                                $("#IDMeta5").text(t[1]);
                                var nMeta5 = t[0];
                                var cUnid5 = t[2];

                                var t = FormatearMeta(json_obj[14]);
                                $("#IDMeta6").text(t[1]);
                                var nMeta6 = t[0];
                                var cUnid6 = t[2];

                                var t = FormatearMeta(json_obj[15]);
                                $("#IDMeta7").text(t[1]);
                                var nMeta7 = t[0];
                                var cUnid7 = t[2];

                                var t = FormatearMeta(json_obj[16]);
                                $("#IDMeta8").text(t[1]);
                                var nMeta8 = t[0];
                                var cUnid8 = t[2];

                                var t = FormatearMeta(json_obj[17]);
                                $("#IDMeta9").text(t[1]);
                                var nMeta9 = t[0];
                                var cUnid9 = t[2];
                                if(cUnid9.trim() == "H."){
                                    json_obj[9] = (json_obj[9] * 24).toString();          // Mediana F. inicio fiebre vs F. Inicio antiviral
                                }

                                var t = FormatearMeta(json_obj[18]);
                                $("#IDMeta10").text(t[1]);
                                var nMeta10 = t[0];
                                var cUnid10 = t[2];
                                //****
                                var rojo = "#FF0000"
                                var verde = "#548235"

                                var color3 = rojo;
                                var color4 = rojo;
                                var color5 = rojo;
                                var color6 = rojo;
                                var color7 = rojo;
                                var color8 = rojo;
                                var color9 = rojo;
                                var color10 = rojo;

                                if (parseFloat(json_obj[3]) >= nMeta3)
                                    color3 = verde;
                                if (parseFloat(json_obj[4]) >= nMeta4)
                                    color4 = verde;
                                if (parseFloat(json_obj[5]) >= nMeta5)
                                    color5 = verde;
                                if (parseFloat(json_obj[6]) <= nMeta6)
                                    color6 = verde;
                                if (parseFloat(json_obj[7]) <= nMeta7)
                                    color7 = verde;
                                if (parseFloat(json_obj[8]) <= nMeta8)
                                    color8 = verde;
                                if (parseFloat(json_obj[9]) <= nMeta9)
                                    color9 = verde;
                                if (parseFloat(json_obj[10]) <= nMeta10)
                                    color10 = verde;
                                //****
                                ConstruirPie("divGraph8_3", color3, String(json_obj[3]), cUnid3);
                                ConstruirPie("divGraph8_4", color4, String(json_obj[4]), cUnid4);
                                ConstruirPie("divGraph8_5", color5, String(json_obj[5]), cUnid5);
                                ConstruirPie("divGraph8_6", color6, String(json_obj[6]), cUnid6);
                                ConstruirPie("divGraph8_7", color7, String(json_obj[7]), cUnid7);
                                ConstruirPie("divGraph8_8", color8, String(json_obj[8]), cUnid8);
                                ConstruirPie("divGraph8_9", color9, String(json_obj[9]), cUnid9);
                                ConstruirPie("divGraph8_10", color10, String(json_obj[10]), cUnid10);
                            }
                        });
                    })
                }

                function FormatearMeta(_Meta){
                    var cMeta = _Meta.substring(0, _Meta.length-1);
                    var nMeta = parseFloat(cMeta);
                    var cUnid = "";

                    if(_Meta.slice(-1)=="%"){
                        cUnid = "%";
                        cMeta = cMeta + "%";
                    }else if(_Meta.slice(-1)=="D"){
                        cUnid = " D.";
                        if (nMeta==1)
                                cMeta = cMeta + " " + cDia_e;
                        else
                                cMeta = cMeta + " " + cDias_e;
                    }else if(_Meta.slice(-1)=="H"){
                        cUnid = " H.";
                        if (nMeta==1)
                                cMeta = cMeta + " " + cHora_e;
                        else
                                cMeta = cMeta + " " + cHoras_e;
                    }
                    return [nMeta, cMeta, cUnid]
                }

                function ConstruirPie(_nombDiv, _color, _labeltext, _Unid){
                    var labeltext = _labeltext.replace(".0", "") + _Unid

                    var chart = AmCharts.makeChart(_nombDiv, {
                        "type": "pie",
                        "hideCredits": true,
                        "showBalloon": false,
                        "fontSize": 12,
                        "outlineAlpha": 1,
                        "outlineColor": _color,
                        "outlineThickness": 2,
                        "labelRadius":-25,
                        "labelText": labeltext,
                        "colorField": _color,
                        "labelsEnabled": true,
                        "autoMargins": false,           // Ocupar todo el contenedor
                        "marginTop": 1,
                        "marginBottom": 1,
                        "marginLeft": 1,
                        "marginRight": 1,
                        "pullOutRadius": 1,
                        "dataProvider": [{
                            "country": "Lithuania",
                            "litres": 0,
                            "color": _color,
                            "labelColor": "#FFFFFF",
                        },
                        {
                            "country": "",
                            "litres": 100,
                            "color": _color,
                            "labelColor": "#FFFFFF",
                        }],
                        "valueField": "litres",
                        "titleField": "country",
                        "colorField": "color",
                        "labelColorField": "labelColor",
                        "balloon":{
                            "fixedPosition":true
                        },
                        "export": {
                            "enabled": false
                        }
                    } );
                }

        </script>

        <style>
            .divGraph8_Pies {
                margin: auto;
                /*width: 68px;
                        height: 68px;*/
                width: 50px;
                height: 50px;
                border: 0px solid;
            }

            #ind_tabla {
                width: 88%;
                margin: auto;
                margin-top: 2%;
                height: 520px;
            }

                #ind_tabla td {
                    border: 1px solid #000;
                    padding: 5px;
                    margin-top: 0px;
                    margin-bottom: 0px;
                }

            td.ind_titulo3 {
                background-color: lightgray;
            }

            .ind_titulo {
                margin: 0px;
                padding: 0px;
                font-family: Verdana;
                font-size: 15px;
                font-weight: bold;
                text-align: center;
            }

            .ind_datotitulostyle {
                font-family: Verdana;
                font-size: 13px;
                font-weight: bold;
            }

            .ind_datostyle {
                font-family: Verdana;
                font-size: 13px;
                font-weight: bold;
                text-align: center;
            }

            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph8 {
                display: none;
                width: 100%;
                height: 620px;
            }

            #containerGraph8 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>

        <div id="containerGraph8">
            <!--
            <div id="divTable8">
                <table id="ind_tabla">
                    <tr>
                        <td id="ind_tablafila1" colspan="3">
                            <p id="IDTitulo1" class="ind_titulo"></p>
                            <p id="IDTitulo2" class="ind_titulo"></p>
                        </td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3" width="55%"><P class="ind_datostyle">Indicador</P></td>
                        <td class="ind_titulo3" width="15%"><P class="ind_datostyle">Meta</P></td>
                        <td class="ind_titulo3" width="30%"><P class="ind_datostyle">Resultado</P></td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p class="ind_datotitulostyle">Porcentaje de casos de IRAG con muestra de laboratorio.</p></td>
                        <td><p id="IDMeta3" class="ind_datostyle">Meta 3</p></td>
                        <td>
                            <div id="divGraph8_3" class="divGraph8_Pies"></div>
                        </td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p class="ind_datotitulostyle">Porcentaje de pacientes con resultado virológico reportado.</p></td>
                        <td><p id="IDMeta4" class="ind_datostyle">Meta 4</p></td>
                        <td>
                            <div id="divGraph8_4" class="divGraph8_Pies"></div>
                        </td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p class="ind_datotitulostyle">Porcentaje de casos cerrados de IRAG medidos por la variable de condición de egreso del paciente.</p></td>
                        <td><p id="IDMeta5" class="ind_datostyle">Meta 5</p></td>
                        <td><div id="divGraph8_5" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p class="ind_datotitulostyle">Mediana entre la recolección de muestras y su recepción en laboratorio.</p></td>
                        <td><p id="IDMeta6" class="ind_datostyle">Meta 6</p></td>
                        <td><div id="divGraph8_6" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p class="ind_datotitulostyle">Mediana entre la recepcion de la muestra en laboratorio y la notificación de los resultados.</p></td>
                        <td><p id="IDMeta7" class="ind_datostyle">Meta 7</p></td>
                        <td><div id="divGraph8_7" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p class="ind_datotitulostyle">Mediana entre la fecha de hospitalizacion y la fecha de notificacion en el sistema de vigilancia.</p></td>
                        <td><p id="IDMeta8" class="ind_datostyle">Meta 8</p></td>
                        <td><div id="divGraph8_8" class="divGraph8_Pies"></div>
                    </tr>
                </table>
            </div>
            -->
            <div id="loaderGraph8" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph8">
                <p id="IDTitulo1" class="ind_titulo" style="padding-top:12px"></p>
                <p id="IDTitulo2" class="ind_titulo"></p>
                <table id="ind_tabla">
                    <tr>
                        <td class="ind_titulo3" width="55%"><P id="indicador" class="ind_datostyle">...</P></td>
                        <td class="ind_titulo3" width="15%"><P id="meta" class="ind_datostyle">...</P></td>
                        <td class="ind_titulo3" width="30%"><P id="resultado" class="ind_datostyle">...</P></td>
                    </tr>
                    <!--
                    <tr>
                        <td class="ind_titulo3"><P class="ind_datotitulostyle">Cobertura de captación de casos IRAG en la unidad centinela.</P></td>
                        <td colspan="6"><p id="IDDato1" class="ind_datostyle"></p></td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3" rowspan="2">
                            <p class="ind_datotitulostyle">Cobertura de captación de casos IRAG en la unidad centinela por grupos poblacionales.</p>
                        </td>
                        <td class="ind_titulo3"><p class="ind_datostyle">Menor de 2 años</p></td>
                        <td class="ind_titulo3"><p class="ind_datostyle">2 < 5 años</p></td>
                        <td class="ind_titulo3"><p class="ind_datostyle">5 a 19 años</p></td>
                        <td class="ind_titulo3"><p class="ind_datostyle">20 a 39 años</p></td>
                        <td class="ind_titulo3"><p class="ind_datostyle">40 a 59 años</p></td>
                        <td class="ind_titulo3"><p class="ind_datostyle">60 o más años</p></td>
                    </tr>
                    <tr>
                        <td><p id="IDDato2a" class="ind_datostyle"></p></td>
                        <td><p id="IDDato2b" class="ind_datostyle"></p></td>
                        <td><p id="IDDato2c" class="ind_datostyle"></p></td>
                        <td><p id="IDDato2d" class="ind_datostyle"></p></td>
                        <td><p id="IDDato2e" class="ind_datostyle"></p></td>
                        <td><p id="IDDato2f" class="ind_datostyle"></p></td>
                    </tr> -->
                    <tr>
                        <td class="ind_titulo3"><p id="indicador3" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta3" class="ind_datostyle">...</p></td>
                        <td>
                            <div id="divGraph8_3" class="divGraph8_Pies"></div>
                        </td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador4" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta4" class="ind_datostyle">...</p></td>
                        <td>
                            <div id="divGraph8_4" class="divGraph8_Pies"></div>
                        </td>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador5" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta5" class="ind_datostyle">...</p></td>
                        <td><div id="divGraph8_5" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador6" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta6" class="ind_datostyle">...</p></td>
                        <td><div id="divGraph8_6" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador7" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta7" class="ind_datostyle">...</p></td>
                        <td><div id="divGraph8_7" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador8" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta8" class="ind_datostyle">...</p></td>
                        <td><div id="divGraph8_8" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador9" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta9" class="ind_datostyle">...</p></td>
                        <td><div id="divGraph8_9" class="divGraph8_Pies"></div>
                    </tr>
                    <tr>
                        <td class="ind_titulo3"><p id="indicador10" class="ind_datotitulostyle">...</p></td>
                        <td><p id="IDMeta10" class="ind_datostyle">...</p></td>
                        <td><div id="divGraph8_10" class="divGraph8_Pies"></div>
                    </tr>
                </table>
            </div>
        </div>
        <!--<script>GetGraphData8();</script>-->
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 8 - Indicadores de Desempeño xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 1 - Epidemiológico 1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
            var expanded = false;
            

            function showCheckboxes() {
                var checkboxes = document.getElementById("c_b");
                if (!expanded) {
                    checkboxes.style.display = "block";
                    expanded = true;
                } else {
                    checkboxes.style.display = "none";
                    expanded = false;
                }
            };
            
            var jsonX;
            $(document).ready(function() {
                $('#btnSave').click(function() {
                    addCheckbox($('#txtName').val());
                });
            });

            function addCheckbox(yval) {
                var container = $('#c_b');

                $('<input />', { type: 'checkbox', id: 'cb'+yval, value: yval, class:'yearCheckBox' }).appendTo(container);
                $('<label />', { 'for': 'cb'+yval, text: yval, class:'labelYearCheckBox' }).appendTo(container);
                $('<br />', { class:'labelYearCheckBox' }).appendTo(container);
            }
            

            function GetDataYears() {

                //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allVals = [];
                var yrs = "";


                //alert($("#anios").val());
                $(document).ready(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Graph/GetYears',
                        data: "{'CountryID':" + GraphCountryID +"}",
                        contentType: "application/json",
                        dataType: 'json',
                        async: true,
                        success: function (data) {
                            var json_obj = JSON.parse(data);
                            jsonX = JSON.parse(data);
                            var chartData = [];
                            $.each(jsonX, function(index, element) {

                                //alert(element);
                                addCheckbox(element)
                                
                            });
                        }
                    });
                })
            }
            function toggleHospitalRegionControls(){
                if($("#chkCountry").is(':checked')){
                    //alert("Pais chequeado");
                    $("#Regions").prop("disabled",true);
                    $("#Hospitals").prop("disabled",true);
                    $("#chkIrag").prop("disabled",true);
                    $("#chkEti").prop("disabled",true);
                }
                else{
                    $("#Regions").prop("disabled",false);
                    $("#Hospitals").prop("disabled",false);
                    $("#chkIrag").prop("disabled",false);
                    $("#chkEti").prop("disabled",false);
                }
            }
            function GetGraphData1() {
                var dataRegion = 0;
                var dataHospital = 0;
                var dataIrag = 0;
                var dataEti = 0;
                if($("#chkCountry").is(':checked')){
                    //alert("Pais chequeado");
                    dataRegion = 0;
                    dataHospital = 0;
                    dataIrag = 0;
                    dataEti = 0;
                }
                else{
                    dataRegion = $("#Regions option:selected").val();
                    dataHospital = $("#Hospitals option:selected").val();
                    if($("#chkIrag").is(':checked')){
                        dataIrag = 1;
                    }
                    if($("#chkEti").is(':checked')){
                        dataEti = 1;
                    }
                }
                //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allVals = [];
                var yrs = "";
                $('#c_b :checked').each(function() {
                    allVals.push($(this).val());
                });
                yrs = allVals.join();
                $("#anios").val(yrs);

                //alert($("#anios").val());
                $(document).ready(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Graph/GetGraphDataTuned',
                        data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph1','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                        contentType: "application/json",
                        dataType: 'json',
                        async: true,
                        beforeSend: function () {
                            $("#containerControl0").hide(0);
                            $("#divGraph0").hide(0);
                            $("#loaderGraph0").show();
                            $("#divGraph1").hide(0);
                            $("#loaderGraph1").show();
                            $("#divGraph2").hide(0);
                            $("#loaderGraph2").show();
                            $("#divGraph3").hide(0);
                            $("#loaderGraph3").show();
                            $("#divGraph4").hide(0);
                            $("#loaderGraph4").show();
                            $("#divGraph5").hide(0);
                            $("#loaderGraph5").show();
                            $("#divGraph11").hide(0);
                            $("#loaderGraph11").show();
                            $("#divGraph12").hide(0);
                            $("#loaderGraph12").show();
                            $("#divGraph9").hide(0);
                            $("#loaderGraph9").show();
                            $("#divGraph10").hide(0);
                            $("#loaderGraph10").show();
                            $("#divGraph7").hide(0);
                            $("#loaderGraph7").show();
                            $("#divGraph8").hide(0);
                            $("#loaderGraph8").show();
                        },
                        complete: function () {
                            $("#containerControl0").show();
                            $("#divGraph0").show();
                            $("#loaderGraph0").hide(0);
                            $("#divGraph1").show();
                            $("#loaderGraph1").hide(0);
                            $("#divGraph2").show();
                            $("#loaderGraph2").hide(0);
                            $("#divGraph3").show();
                            $("#loaderGraph3").hide(0);
                            $("#divGraph4").show();
                            $("#loaderGraph4").hide(0);
                            $("#divGraph5").show();
                            $("#loaderGraph5").hide(0);
                            $("#divGraph11").show();
                            $("#loaderGraph11").hide(0);
                            $("#divGraph12").show();
                            $("#loaderGraph12").hide(0);
                            $("#divGraph9").show();
                            $("#loaderGraph9").hide(0);
                            $("#divGraph10").show();
                            $("#loaderGraph10").hide(0);
                            $("#divGraph7").show();
                            $("#loaderGraph7").hide(0);
                            $("#divGraph8").show();
                            $("#loaderGraph8").hide(0);
                        },
                        success: function (data) {
                            /*/################################################################# DESARROLLO
                            if(GraphCountryID == 17){
                                GetGraphData11();
                                GetGraphData12();
                                GetGraphData9();
                                GetGraphData10();
                                GetGraphData7();
                                GetGraphData8();
                                return '';
                            }
                            //################################################################# END DESARROLLO*/
                            var json_obj = JSON.parse(data);
                            jsonX = JSON.parse(data);
                            var chartData = [];
                            $.each(jsonX, function(index, element) {
                                $.each(element.graphData.graphDataItem, function(index2, element2) {
                                    chartData.push({
                                        semana: element2.semana,
                                        serie1: element2.serie1,
                                        serie2: element2.serie2,
                                        serie3: element2.serie3
                                    });
                                });
                            });

                            //-----------------Quita los ceros del fin y del inicio del array----------------------
                            chartDataLength = chartData.length;
                            if(chartDataLength>0){
                                for(i = chartDataLength-1; i>0;i--){
                                    //alert(chartData[i].semana);
                                    if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0){
                                        chartData.pop();
                                    }
                                    else{
                                        break;
                                    }
                                }
                            }
                            chartDataLength = chartData.length;
                            //alert(chartDataLength);
                            chartData.reverse();
                            if(chartDataLength>0){
                                for(i = chartDataLength-1; i>0;i--){
                                    //alert(chartData[i].semana);
                                    if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0){
                                        chartData.pop();
                                    }
                                    else{
                                        break;
                                    }
                                }
                            }
                            chartData.reverse();
                            //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------

                            var chart = AmCharts.makeChart("divGraph1", {
                                "type": "serial",
                                "theme": "light",
                                "mouseWheelZoomEnabled":false,
                                "legend": {
                                    "useGraphSettings": true
                                },
                                "titles":   [
		                                        {
		                                            "text": jsonX.graph.graphTitle,
		                                            "size": 15
		                                        }
                                            ],
                                "dataProvider": chartData,
                                "synchronizeGrid":true,
                                "valueAxes": [{
                                    "id":"v1",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "position": "left",
                                    "title":jsonX.graph.graphYAxisTitle
                                }],
                                "graphs": [{
                                    "valueAxis": "v1",
                                    "lineColor": "#FF6600",
                                    "bullet": "round",
                                    "bulletBorderThickness": 1,
                                    "hideBulletsCount": 40,
                                    "title": jsonX.graph.graphSeries1Label,
                                    "valueField": "serie1",
                                    "type": "line",
                                    "fillAlphas": 0,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                    /*balloonFunction: function(e) {var value = e.graph.chart.dataProvider[e.index][e.graph.valueField]; if (!value) { return ""; } return e.graph.chart.formatString(e.graph.balloonText, e, true); }*/
                                    /*"balloonFunction": function(info) {if (info.values.value!=0) return String(info.values.value); else return '';}*/
                                    /*"showBalloon": false*/
                                }, {
                                    "valueAxis": "v1",
                                    "lineColor": "#FCD202",
                                    "bullet": "square",
                                    "bulletBorderThickness": 1,
                                    "hideBulletsCount": 40,
                                    "title": jsonX.graph.graphSeries2Label,
                                    "valueField": "serie2",
                                    "type": "line",
                                    "fillAlphas": 0,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    "valueAxis": "v1",
                                    "lineColor": "#B0DE09",
                                    "bullet": "triangleUp",
                                    "bulletBorderThickness": 1,
                                    "hideBulletsCount": 40,
                                    "title": jsonX.graph.graphSeries3Label,
                                    "valueField": "serie3",
                                    "type": "line",
                                    "fillAlphas": 0,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }],
                                "chartScrollbar": {},
                                "chartCursor": {
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "semana",
                                "categoryAxis": {
                                    "parseDates": false,
                                    "axisColor": "#DADADA",
                                    "minorGridEnabled": true,
                                    "title":jsonX.graph.graphXAxisTitle
                                },
                                /*"export": {
                                "enabled": true,
                                "position": "top-right"
                                }*/
                                "export": {
                                    "enabled": true,
                                    "menu": [ {
                                        "class": "export-main",
                                        "menu": [ {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                            "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                        },
                                        {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                            "format": "PRINT"
                                        }]
                                    }]
                                }
                            });

                            //chart.addListener("dataUpdated", zoomChart);
                            chart.addListener("rendered", zoomChart);
                            zoomChart();
                            function zoomChart(){
                                chart.zoomToIndexes(0, chart.dataProvider.length);
                            }
                            //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            GetGraphData2();
                            GetGraphData3();
                            GetGraphData4();
                            GetGraphData5();
                            GetGraphData0();
                            GetGraphData11();
                            GetGraphData12();
                            GetGraphData9();
                            GetGraphData10();
                            GetGraphData7();
                            GetGraphData8();
                        }
                    });
                })
            };

        </script>

        <style>
            /*.multiselect {
                width: 200px;
            }

            .selectBox {
                position: relative;
            }

            .selectBox select {
                width: 100%;
                font-weight: bold;
            }

            .overSelect {
                position: absolute;
                left: 0;
                right: 0;
                top: 0;
                bottom: 0;
            }

            #c_b {
                display: none;
                border: 1px #dadada solid;
            }

            #c_b label {
                display: block;
            }

            #c_b label:hover {
                background-color: #1e90ff;
            }*/

            .loaderGraph {
                display:    block;
                position:   fixed;
                z-index:    1000;
                top:        0;
                left:       0;
                width:      750px;
                height:     600px;
                background: rgba( 255, 255, 255, .8 )
                            url('/Content/themes/base/images/ajax-loader.gif')
                            50% 50%
                            no-repeat;
            }
            #divGraph1  {
                display:none;
                width:  100%;
                height: 600px;
            }
            #containerControl0{
                border-bottom: solid #e4e4e4 1px;
                border-top: solid #e4e4e4 1px;
                width:  calc(96% + 10px);
                float:  left;
                margin-left: 5px;
                padding: 5px 5px;
                height: 90px;
                margin:15px 0px;
            }
            #containerMapControl0{
                border-bottom: solid #e4e4e4 1px;
                border-top: solid #e4e4e4 1px;
                width:  calc(96% + 10px);
                float:  left;
                margin-left: 5px;
                padding: 5px 5px;
                height: 90px;
                margin:15px 0px;
            }
            #subcontainerControl0{                    
                padding: 6px 8px;
                height: 30px;
            }
            #subcontainerMapControl0{                    
                padding: 6px 8px;
                height: 30px;
            }
            #subcontainerControl1{                    
                padding: 6px 8px;
                height: 30px;   
            }
            #subcontainerMapControl1{                    
                padding: 6px 8px;
                height: 30px;   
            }
            #selectYears{
                float:left;
            }            
            #labelYearsContainer, #yearsContainer{
                float:left;
            }
            #labelMapYearsContainer, #yearsMapContainer{
                float:left;
            }
            #labelYearsContainer{
                width:75px;
                height:34px;
                padding-top:10px
            }
            #labelMapYearsContainer{
                width:75px;
                height:34px;
                padding-top:10px
            }
            /*#c_b{                    
                dpadding: 6px 8px;
                padding: 10px 0px;
                dheight: 100px;
                display:none;
            }*/
            #c_b{                    
                padding: 5px 17px;                    
                height: 100px;
                overflow-y:scroll;
                display:none;
                position: sticky;
                z-index:10;
            }
            #map_c_b{                    
                padding: 5px 17px;                    
                height: 100px;
                overflow-y:scroll;
                display:none;
                position: sticky;
                z-index:10;
            }
            .overSelect {
                position: absolute;
                left: 0;
                right: 0;
                top: 0;
                bottom: 0;
                height:34px;
            }

            .labelYearCheckBox{
                margin-right: 15px;
                font-weight: normal;
            }
            input[type="checkbox"] .yearCheckBox{
                margin-right: 5px;
                margin-top: 0px;
                vertical-align:middle;
            }
            #containerControl1{
                border: solid lightgray 1px;
                width:   100px;
                float:  left;
                margin:  5px;
                padding: 8px 7px 3px 7px;
            }
            #containerControl2{
                border: solid lightgray 1px;
                width:  100%;
                height: 50px;
                float:  left;
                margin: 5px 0px 5px 0px;
                padding: 7px 5px;
            }
            #containerGraph1{
                border: solid #e4e4e4 1px;
                width:  48%;
                float:  left;
                margin: 5px;
            }
            #selectInstitutions {
                float: left;
                width: 420px;
            }
            #selectRegions {
                float: left;
                width: 367px;
            }
            #selectInstitutions #selectRegions{
                float:left;
            }
            #btnGetGraphData1 {
                -webkit-border-radius: 0;
                -moz-border-radius: 0;
                border: none;
                border-radius: 4px;
                font-family: Arial;
                color: #ffffff;
                font-size: 13px;
                background: #f04646;
                padding: 0px 10px 0px 10px;
                text-decoration: none;
                margin-left: 10px;
                height:33px;
            }

            #btnGetMapData1 {
                -webkit-border-radius: 0;
                -moz-border-radius: 0;
                border: none;
                border-radius: 4px;
                font-family: Arial;
                color: #ffffff;
                font-size: 13px;
                background: #f04646;
                padding: 0px 10px 0px 10px;
                text-decoration: none;
                margin-left: 10px;
                height:33px;
            }

            #btnGetGraphData1:hover {
                background: #fc3c3c;
                text-decoration: none;
            }

            #btnGetMapData1:hover {
                background: #fc3c3c;
                text-decoration: none;
            }

            .input-group-addon{
                background-color:#008dc9;
                color:#ffffff;
            }
        </style>

        <script>GetDataYears();</script>

        <div id="containerControl0">
            <div id="subcontainerControl0">
                <input id="chkCountry" type="checkbox" value="pais" checked onchange="toggleHospitalRegionControls();" title="@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphCountryCheckboxTitle"))" />@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphCountryCheckboxLabel"))
                <input id="chkIrag" type="checkbox" value="irag" disabled/>@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphSARICheckboxLabel"))
                <input id="chkEti" type="checkbox" value="eti" disabled/>@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphILICheckboxLabel"))
            </div>
            
            <div id="subcontainerControl1">
                <div class='input-group' id="selectRegions">
                    <span class="input-group-addon">
                        @(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphRegionSelect"))
                    </span>
                    <select id="Regions" disabled class="form-control" data-bind="options: regions,
                           optionsText: 'Name',
                           optionsValue: 'Id',
                           value: selectedRegionId,
                           optionsCaption: 'Select...',
                           valueUpdate:'change',
                           event:{ change: ReloadInstitutions}"></select>
                </div>

                <div class='input-group' id="selectInstitutions">
                    <span class="input-group-addon">
                        @(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphInstitutionSelect"))
                    </span>
                    <select id="Hospitals" disabled class="form-control" data-bind="options: institutions,
                           optionsText: 'Name',
                           optionsValue: 'Id',
                           value: selectedInstitutionId,
                           optionsCaption: 'Select...',
                           valueUpdate:'change'"></select>

                    @*optionsCaption: 'Select...',*@
                </div>

                <div class='input-group' id="selectYears">
                    <div id="labelYearsContainer" class="input-group-addon">@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphYearsSelect"))</div>
                    <div id="yearsContainer">
                        <div id="fakeSelectYear" onclick="showCheckboxes()">
                            <select id="selectYearFake" class="form-control">
                                <option selected>@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphYearsOptionSelect"))</option>
                            </select>
                            <div class="overSelect"></div>
                        </div>
                        <div id="c_b" class="form-control">
                        </div>
                    </div>
                </div>
                              
                <input type="text" style="display:none;" id="anios" value="2017" />
                <div><button id="btnGetGraphData1" onclick="GetGraphData1()">@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphUpdateButton"))</button></div>
                <!--div id="c_b" style="display:block;">
                    Años:
                </div-->
            </div>
            
        </div>

        <div id="containerGraph1">
            <!--Inicio de gráficas-->
            <!--Gráfica Epidemiológica 1-->

            <div id="loaderGraph1" class="loaderGraph"></div>
            <div id="divGraph1"></div>
        </div>

        <script>GetGraphData1();</script>
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 1 - Epidemiológico 1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 0 - Epidemiológico 1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
                $(document).mouseup(function(e) 
                {
                    //var container = $("#c_b");
                    var subcontainer = $("#c_b");
                    var subcontainer2 = $("#map_c_b");
                    // if the target of the click isn't the container nor a descendant of the container
                    if (!subcontainer.is(e.target) && subcontainer.has(e.target).length === 0  ) 
                    {
                        subcontainer.hide();
                        expanded = false;
                    }
                    if (!subcontainer2.is(e.target) && subcontainer2.has(e.target).length === 0  ) 
                    {
                        subcontainer2.hide();
                        expandedMap = false;
                    }
                });
        
                var jsonX;
                function GetGraphData0() {
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    if($("#chkCountry").is(':checked')){
                        //alert("Pais chequeado");
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);

                    //alert($("#anios").val());
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph0','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                var json_obj = JSON.parse(data);
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    //alert (JSON.stringify(element));
                                    var container = $('#divGraph0');
                                    container.empty();
                                    $('<p />', { text: jsonX.graph.graphTitle, class:'amcharts-title amcharts-title-own' }).appendTo(container);
                                    //alert (JSON.stringify(element.graphTitle));
                                    $('<table />', {id:'tableAntecedentes', class:'table-own' }).appendTo(container);
                                    var container = $('#tableAntecedentes');
                                    $('<tr />', {id:'trheaders',class:'table-tr-own'}).appendTo(container);
                                    var container = $('#trheaders');
                                    $.each(element.graphHeaders.header, function(index2, element2) {
                                        var colspanThis = 1;
                                        if(index2>0){
                                            colspanThis = 2;
                                        }                                    
                                        $('<td />', {id:'tdheaders',colspan:colspanThis, class:'table-td-own', text:element2 }).appendTo(container);
                                    });
                                    var container = $('#tableAntecedentes');
                                    $('<tr />', {id:'trsubheaders',class:'table-subtr-own' }).appendTo(container);
                                    var container = $('#trsubheaders');
                                    $.each(element.subGraphHeaders.subheader, function(index2, element2) {
                                        $('<td />', {id:'tdsubheaders',class:'table-subtd-own', text:element2 }).appendTo(container);
                                    });

                                    var container = $('#tableAntecedentes');                               
                                    $.each(element.row, function(index2, element2) {
                                        var clase = "";

                                        if(index2==0){
                                            clase= clase + " bold";
                                        }
                                        if(index2 == 7){
                                            clase = clase + " gray-background";
                                        }                                    
                                        if(index2 == 8 || index2 == 9 || index2 == 10 ){
                                            clase = clase + " lgray-background";                                        
                                        }
                                        if(index2==14){
                                            clase = clase + " bold";
                                            clase = clase + " gray-background";
                                        }
                                        if(index2==15){                                        
                                            $('<tr />', {id:'trdata'+index2+'_1',class:'table-trdata-own gray-background bold'}).appendTo(container);
                                            var tempContainer = $('#'+'trdata'+index2+'_1');
                                            $('<td />', {id:'tddata',class:'table-tddata-own', text:"Otros aspectos" }).appendTo(tempContainer);
                                            $('<td />', {id:'tddata',class:'table-tddata-own'}).appendTo(tempContainer);
                                            $('<td />', {id:'tddata',class:'table-tddata-own'}).appendTo(tempContainer);
                                            $('<td />', {id:'tddata',class:'table-tddata-own'}).appendTo(tempContainer);
                                            $('<td />', {id:'tddata',class:'table-tddata-own'}).appendTo(tempContainer);
                                            $('<td />', {id:'tddata',class:'table-tddata-own'}).appendTo(tempContainer);
                                            $('<td />', {id:'tddata',class:'table-tddata-own'}).appendTo(tempContainer);
                                        }
                                        $('<tr />', {id:'trdata'+index2,class:'table-trdata-own '+clase }).appendTo(container);
                                        var container2 = $('#trdata'+index2);
                                        $.each(element2.col, function(index3, element3) {
                                            $('<td />', {id:'tddata',class:'table-tddata-own', text:element3 }).appendTo(container2);                                        
                                            //alert (JSON.stringify(element2));
                                        });
                                    });
                                    /*var container = $('#c_b');

                                    $('<input />', { type: 'checkbox', id: 'cb'+yval, value: yval, class:'yearCheckBox' }).appendTo(container);*/
                                    /*$.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2,
                                            serie3: element2.serie3,
                                            serie4: element2.serie4,
                                            serie5: element2.serie5,
                                            serie6: element2.serie6,
                                            serie7: element2.serie7
                                        });
                                    });*/

                                });

                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------


                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };

        </script>

        <style>
            .bold{
                font-weight: bold;
            }

            .gray-background{
                background-color: lightgrey;
            }

            .lgray-background{
                background-color:#f3f3f3;
            }

            .table-own{
                border: solid black 1px;
                font-family: Verdana;
                font-size:11px;
            
            }
            .table-tr-own{
                border: solid black 1px;
                font-weight:bold;
                background-color:lightgray;
            }
            .table-td-own{
                border: solid black 1px;
            }
            .table-trdata-own{
                border: solid black 1px;
                padding: 3px;
            }
            .table-tddata-own{
                border: solid black 1px;
                padding: 3px;
            }
            .table-subtr-own{
                border: solid black 1px;
                font-weight:bold;
                color:#7d7d7d;
            }
            .table-subtd-own{
                border: solid black 1px;
            }
            .amcharts-title-own{
                font-family: Verdana;
                font-size:15px;
                font-weight:bold;
                text-align:center;
                padding-top:13px;
            }
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph0 {
                display: none;
                width: 100%;
                height: 600px;
                padding:15px 48px;
            }

            #containerGraph0 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>
    
        <div id="containerGraph0">
            <!--Inicio de gráficas-->
            <!--Gráfica Epidemiológica 1-->
            <!--button onclick="GetGraphData2()">Generate</button-->
            <div id="loaderGraph0" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph0"></div>
        </div>

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 0 - Epidemiológico 1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 2 - Epidemiológico 2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
            var jsonX;
            function GetGraphData2() {
                var dataRegion = 0;
                var dataHospital = 0;
                var dataIrag = 0;
                var dataEti = 0;
                if($("#chkCountry").is(':checked')){
                    //alert("Pais chequeado");
                    dataRegion = 0;
                    dataHospital = 0;
                    dataIrag = 0;
                    dataEti = 0;
                }
                else{
                    dataRegion = $("#Regions option:selected").val();
                    dataHospital = $("#Hospitals option:selected").val();
                    if($("#chkIrag").is(':checked')){
                        dataIrag = 1;
                    }
                    if($("#chkEti").is(':checked')){
                        dataEti = 1;
                    }
                }
                //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allVals = [];
                var yrs = "";
                $('#c_b :checked').each(function() {
                    allVals.push($(this).val());
                });
                yrs = allVals.join();
                $("#anios").val(yrs);

                //alert($("#anios").val());
                $(document).ready(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Graph/GetGraphDataTuned',
                        data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph2','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                        contentType: "application/json",
                        dataType: 'json',
                        success: function (data) {
                            var json_obj = JSON.parse(data);
                            jsonX = JSON.parse(data);
                            var chartData = [];
                            $.each(jsonX, function(index, element) {
                                $.each(element.graphData.graphDataItem, function(index2, element2) {
                                    chartData.push({
                                        semana: element2.semana,
                                        serie1: element2.serie1,
                                        serie2: element2.serie2,
                                        serie3: element2.serie3,
                                        serie4: element2.serie4,
                                        serie5: element2.serie5,
                                        serie6: element2.serie6,
                                        serie7: element2.serie7
                                    });
                                });

                            });

                            //-----------------Quita los ceros del fin y del inicio del array----------------------
                            chartDataLength = chartData.length;
                            if(chartDataLength>0){
                                for(i = chartDataLength-1; i>0;i--){
                                    //alert(chartData[i].semana);
                                    if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0){
                                        chartData.pop();
                                    }
                                    else{
                                        break;
                                    }
                                }
                            }
                            chartDataLength = chartData.length;
                            //alert(chartDataLength);
                            chartData.reverse();
                            if(chartDataLength>0){
                                for(i = chartDataLength-1; i>0;i--){
                                    //alert(chartData[i].semana);
                                    if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0){
                                        chartData.pop();
                                    }
                                    else{
                                        break;
                                    }
                                }
                            }
                            chartData.reverse();
                            //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------

                            var chart = AmCharts.makeChart("divGraph2", {
                                "type": "serial",
                                "theme": "light",
                                "mouseWheelZoomEnabled":false,
                                "legend": {
                                    "useGraphSettings": true
                                },
                                "titles":   [
                                                {
                                                    "text": jsonX.graph.graphTitle,
                                                    "size": 15
                                                }
                                ],
                                "dataProvider": chartData,
                                "synchronizeGrid":true,
                                "valueAxes": [{
                                    "id":"v1",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "position": "left",
                                    "integersOnly": true,
                                    "title":jsonX.graph.graphYAxisTitle
                                },{
                                    "id":"v2",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "position": "right",
                                    "title":jsonX.graph.graphYAxisTitle2
                                }],
                                "graphs": [{
                                    /*Influenza B*/
                                    "valueAxis": "v1",
                                    "lineColor": "#99cc00",
                                    "title": jsonX.graph.graphSeries1Label,
                                    "valueField": "serie1",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A/H3*/
                                    "valueAxis": "v1",
                                    "lineColor": "#00b0f0",
                                    "title": jsonX.graph.graphSeries2Label,
                                    "valueField": "serie2",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A/H1*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ff0000",
                                    "title": jsonX.graph.graphSeries3Label,
                                    "valueField": "serie3",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A No Suptipificable*/
                                    "valueAxis": "v1",
                                    "lineColor": "#000000",
                                    "title": jsonX.graph.graphSeries4Label,
                                    "valueField": "serie4",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A No suptipificada*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ffff00",
                                    "title": jsonX.graph.graphSeries5Label,
                                    "valueField": "serie5",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*influenza AH1N1 pdm09*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ff9900",
                                    "title": jsonX.graph.graphSeries6Label,
                                    "valueField": "serie6",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*% positivos para influenza*/
                                    "valueAxis": "v2",
                                    "lineColor": "#000000",
                                    "bullet": "triangleUp",
                                    "bulletBorderThickness": 1,
                                    "hideBulletsCount": 40,
                                    "title": jsonX.graph.graphSeries7Label,
                                    "valueField": "serie7",
                                    "type": "line",
                                    "fillAlphas": 0,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }
                                ],
                                "chartScrollbar": {},
                                "chartCursor": {
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "semana",
                                "categoryAxis": {
                                    "parseDates": false,
                                    "axisColor": "#DADADA",
                                    "minorGridEnabled": true,
                                    "title":jsonX.graph.graphXAxisTitle
                                },
                                /*"export": {
                                    "enabled": true,
                                    "position": "top-right"
                                    }*/
                                "export": {
                                    "enabled": true,
                                    "menu": [ {
                                        "class": "export-main",
                                        "menu": [ {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                            "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                        },
                                        {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                            "format": "PRINT"
                                        }]
                                    }]
                                }
                            });

                            //chart.addListener("dataUpdated", zoomChart);
                            chart.addListener("rendered", zoomChart);
                            zoomChart();
                            function zoomChart(){
                                chart.zoomToIndexes(0, chart.dataProvider.length);
                            }
                            //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                        }
                    });
                })
            };

        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph2 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph2 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>
        <div id="containerGraph2">
            <!--Inicio de gráficas-->
            <!--Gráfica Epidemiológica 1-->
            <!--button onclick="GetGraphData2()">Generate</button-->
            <div id="loaderGraph2" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph2"></div>
        </div>

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 2 - Epidemiológico 2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 3 - Epidemiológico 3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
            var jsonX;
            function GetGraphData3() {
                var dataRegion = 0;
                var dataHospital = 0;
                var dataIrag = 0;
                var dataEti = 0;
                if($("#chkCountry").is(':checked')){
                    //alert("Pais chequeado");
                    dataRegion = 0;
                    dataHospital = 0;
                    dataIrag = 0;
                    dataEti = 0;
                }
                else{
                    dataRegion = $("#Regions option:selected").val();
                    dataHospital = $("#Hospitals option:selected").val();
                    if($("#chkIrag").is(':checked')){
                        dataIrag = 1;
                    }
                    if($("#chkEti").is(':checked')){
                        dataEti = 1;
                    }
                }
                //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allVals = [];
                var yrs = "";
                $('#c_b :checked').each(function() {
                    allVals.push($(this).val());
                });
                yrs = allVals.join();
                $("#anios").val(yrs);

                //alert($("#anios").val());
                $(document).ready(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Graph/GetGraphDataTuned',
                        data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph3','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                        contentType: "application/json",
                        dataType: 'json',
                        success: function (data) {
                            var json_obj = JSON.parse(data);
                            jsonX = JSON.parse(data);
                            var chartData = [];
                            $.each(jsonX, function(index, element) {
                                $.each(element.graphData.graphDataItem, function(index2, element2) {
                                    chartData.push({
                                        semana: element2.semana,
                                        serie1: element2.serie1,
                                        serie2: element2.serie2,
                                        serie3: element2.serie3,
                                        serie4: element2.serie4,
                                        serie5: element2.serie5,
                                        serie6: element2.serie6,
                                        serie7: element2.serie7,
                                        serie8: element2.serie8,
                                        serie9: element2.serie9,
                                        serie10: element2.serie10,
                                        serie11: element2.serie11
                                    });
                                });

                            });

                            //-----------------Quita los ceros del fin y del inicio del array----------------------
                            chartDataLength = chartData.length;
                            if(chartDataLength>0){
                                for(i = chartDataLength-1; i>0;i--){
                                    //alert(chartData[i].semana);
                                    if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0 && chartData[i].serie8==0 && chartData[i].serie9==0 && chartData[i].serie10==0 && chartData[i].serie11==0){
                                        chartData.pop();
                                    }
                                    else{
                                        break;
                                    }
                                }
                            }
                            chartDataLength = chartData.length;
                            //alert(chartDataLength);
                            chartData.reverse();
                            if(chartDataLength>0){
                                for(i = chartDataLength-1; i>0;i--){
                                    //alert(chartData[i].semana);
                                    if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0 && chartData[i].serie8==0 && chartData[i].serie9==0 && chartData[i].serie10==0 && chartData[i].serie11==0){
                                        chartData.pop();
                                    }
                                    else{
                                        break;
                                    }
                                }
                            }
                            chartData.reverse();
                            //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------

                            var chart = AmCharts.makeChart("divGraph3", {
                                "type": "serial",
                                "theme": "light",
                                "mouseWheelZoomEnabled":false,
                                "legend": {
                                    "useGraphSettings": true
                                },
                                "titles":   [
                                                {
                                                    "text": jsonX.graph.graphTitle,
                                                    "size": 15
                                                }
                                ],
                                "dataProvider": chartData,
                                "synchronizeGrid":true,
                                "valueAxes": [{
                                    "id":"v1",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "position": "left",
                                    "integersOnly": true,
                                    "title":jsonX.graph.graphYAxisTitle
                                },{
                                    "id":"v2",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "position": "right",
                                    "title":jsonX.graph.graphYAxisTitle2
                                }],
                                "graphs": [{
                                    /*Otros*/
                                    "valueAxis": "v1",
                                    "lineColor": "#7f7f7f",
                                    "title": jsonX.graph.graphSeries1Label,
                                    "valueField": "serie1",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Adenovirus*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ff99ff",
                                    "title": jsonX.graph.graphSeries2Label,
                                    "valueField": "serie2",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*VSR*/
                                    "valueAxis": "v1",
                                    "lineColor": "#0070c0",
                                    "title": jsonX.graph.graphSeries3Label,
                                    "valueField": "serie3",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*parainfluenza*/
                                    "valueAxis": "v1",
                                    "lineColor": "#7030a0",
                                    "title": jsonX.graph.graphSeries4Label,
                                    "valueField": "serie4",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza B*/
                                    "valueAxis": "v1",
                                    "lineColor": "#99cc00",
                                    "title": jsonX.graph.graphSeries5Label,
                                    "valueField": "serie5",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A/H3*/
                                    "valueAxis": "v1",
                                    "lineColor": "#00b0f0",
                                    "title": jsonX.graph.graphSeries6Label,
                                    "valueField": "serie6",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A h1*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ff0000",
                                    "title": jsonX.graph.graphSeries7Label,
                                    "valueField": "serie7",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A no subtipificable*/
                                    "valueAxis": "v1",
                                    "lineColor": "#000000",
                                    "title": jsonX.graph.graphSeries8Label,
                                    "valueField": "serie8",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A no suptipificada*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ffff00",
                                    "title": jsonX.graph.graphSeries9Label,
                                    "valueField": "serie9",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza AH1N1*/
                                    "valueAxis": "v1",
                                    "lineColor": "#ff9900",
                                    "title": jsonX.graph.graphSeries10Label,
                                    "valueField": "serie10",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Positivos a virus respiratorios*/
                                    "valueAxis": "v2",
                                    "lineColor": "#000000",
                                    "bullet": "triangleUp",
                                    "bulletBorderThickness": 1,
                                    "hideBulletsCount": 40,
                                    "title": jsonX.graph.graphSeries11Label,
                                    "valueField": "serie11",
                                    "type": "line",
                                    "fillAlphas": 0,
                                    "balloonFunction": function(info) {
                                        if (info.values.value)
                                            return String(info.values.value);
                                        else
                                            return '';
                                    }
                                }
                                ],
                                "chartScrollbar": {},
                                "chartCursor": {
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "semana",
                                "categoryAxis": {
                                    "parseDates": false,
                                    "axisColor": "#DADADA",
                                    "minorGridEnabled": true,
                                    "title":jsonX.graph.graphXAxisTitle
                                },
                                /*"export": {
                                    "enabled": true,
                                    "position": "top-right"
                                    }*/
                                "export": {
                                    "enabled": true,
                                    "menu": [ {
                                        "class": "export-main",
                                        "menu": [ {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                            "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                        },
                                        {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                            "format": "PRINT"
                                        }]
                                    }]
                                }
                            });

                            //chart.addListener("dataUpdated", zoomChart);
                            chart.addListener("rendered", zoomChart);
                            zoomChart();
                            function zoomChart(){
                                chart.zoomToIndexes(0, chart.dataProvider.length);
                            }
                            //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                        }
                    });
                })
            };

        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph3 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph3 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>
        <div id="containerGraph3">
            <!--Inicio de gráficas-->
            <!--button onclick="GetGraphData3()">Generate</button-->

            <div id="loaderGraph3" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph3"></div>
        </div>

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 3 - Epidemiológico 3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 4 - Epidemiológico 4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
            var jsonX;
            function GetGraphData4() {
                var dataRegion = 0;
                var dataHospital = 0;
                var dataIrag = 0;
                var dataEti = 0;
                if($("#chkCountry").is(':checked')){
                    //alert("Pais chequeado");
                    dataRegion = 0;
                    dataHospital = 0;
                    dataIrag = 0;
                    dataEti = 0;
                }
                else{
                    dataRegion = $("#Regions option:selected").val();
                    dataHospital = $("#Hospitals option:selected").val();
                    if($("#chkIrag").is(':checked')){
                        dataIrag = 1;
                    }
                    if($("#chkEti").is(':checked')){
                        dataEti = 1;
                    }
                }
                //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allVals = [];
                var yrs = "";
                $('#c_b :checked').each(function() {
                    allVals.push($(this).val());
                });
                yrs = allVals.join();
                $("#anios").val(yrs);

                //alert($("#anios").val());
                $(document).ready(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Graph/GetGraphDataTuned',
                        data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph4','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                        contentType: "application/json",
                        dataType: 'json',
                        success: function (data) {
                            var json_obj = JSON.parse(data);
                            jsonX = JSON.parse(data);
                            var chartData = [];
                            $.each(jsonX, function(index, element) {
                                $.each(element.graphData.graphDataItem, function(index2, element2) {
                                    chartData.push({
                                        edad: element2.edad,
                                        serie1: element2.serie1,
                                        serie2: element2.serie2,
                                        serie3: element2.serie3,
                                        serie4: element2.serie4,
                                        serie5: element2.serie5,
                                        serie6: element2.serie6,
                                        serie7: element2.serie7,
                                        serie8: element2.serie8,
                                        serie9: element2.serie9,
                                        serie10: element2.serie10
                                    });
                                });

                            });

                            var chart = AmCharts.makeChart("divGraph4", {
                                "type": "serial",
                                "theme": "light",
                                "mouseWheelZoomEnabled":false,
                                "legend": {
                                    "horizontalGap": 10,
                                    "maxColumns": 1,
                                    "position": "right",
                                    "useGraphSettings": true,
                                    "markerSize": 10
                                },
                                "titles":   [
                                                {
                                                    "text": jsonX.graph.graphTitle,
                                                    "size": 15
                                                }
                                ],
                                "dataProvider": chartData,
                                "synchronizeGrid":true,
                                "valueAxes": [{
                                    "id":"v1",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "stackType": "regular",
                                    "position": "left",
                                    "gridAlpha": 0,
                                    "title":jsonX.graph.graphYAxisTitle
                                }],
                                "graphs": [{
                                    /*Otros*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    /*"balloonFunction": function(info) {if (info.values.value) return String(info.values.value); else return '';},*/
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#7f7f7f",
                                    "title": jsonX.graph.graphSeries1Label,
                                    "valueField": "serie1",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Adenovirus*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ff99ff",
                                    "title": jsonX.graph.graphSeries2Label,
                                    "valueField": "serie2",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*VSR*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#0070c0",
                                    "title": jsonX.graph.graphSeries3Label,
                                    "valueField": "serie3",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Parainfluenza*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#7030a0",
                                    "title": jsonX.graph.graphSeries4Label,
                                    "valueField": "serie4",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza B*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#99cc00",
                                    "title": jsonX.graph.graphSeries5Label,
                                    "valueField": "serie5",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A/H3*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#00b0f0",
                                    "title": jsonX.graph.graphSeries6Label,
                                    "valueField": "serie6",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*A H1*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ff0000",
                                    "title": jsonX.graph.graphSeries7Label,
                                    "valueField": "serie7",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A No subtipificable*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#000000",
                                    "title": jsonX.graph.graphSeries8Label,
                                    "valueField": "serie8",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A No Subtipificada*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ffff00",
                                    "title": jsonX.graph.graphSeries9Label,
                                    "valueField": "serie9",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A H1N1 pdm09*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ff9900",
                                    "title": jsonX.graph.graphSeries10Label,
                                    "valueField": "serie10",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }
                                ],
                                "chartScrollbar": {},
                                "chartCursor": {
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "edad",
                                "categoryAxis": {
                                    "parseDates": false,
                                    "axisColor": "#DADADA",
                                    "minorGridEnabled": true,
                                    "title":jsonX.graph.graphXAxisTitle
                                },
                                /*"export": {
                                    "enabled": true,
                                    "position": "top-right"
                                    }*/
                                "export": {
                                    "enabled": true,
                                    "menu": [ {
                                        "class": "export-main",
                                        "menu": [ {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                            "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                        },
                                        {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                            "format": "PRINT"
                                        }]
                                    }]
                                }
                            });

                            //chart.addListener("dataUpdated", zoomChart);
                            chart.addListener("rendered", zoomChart);
                            zoomChart();
                            function zoomChart(){
                                chart.zoomToIndexes(0, chart.dataProvider.length);
                            }
                            //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                        }
                    });
                })
            };

        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph4 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph4 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>
        <div id="containerGraph4">
            <!--Inicio de gráficas-->
            <!--Gráfica Epidemiológica 1-->
            <!--button onclick="GetGraphData4()">Generate</button-->

            <div id="loaderGraph4" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph4"></div>
        </div>

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 4 - Epidemiológico 4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 5 - Epidemiológico 5xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
            var jsonX;
            function GetGraphData5() {
                var dataRegion = 0;
                var dataHospital = 0;
                var dataIrag = 0;
                var dataEti = 0;
                if($("#chkCountry").is(':checked')){
                    //alert("Pais chequeado");
                    dataRegion = 0;
                    dataHospital = 0;
                    dataIrag = 0;
                    dataEti = 0;
                }
                else{
                    dataRegion = $("#Regions option:selected").val();
                    dataHospital = $("#Hospitals option:selected").val();
                    if($("#chkIrag").is(':checked')){
                        dataIrag = 1;
                    }
                    if($("#chkEti").is(':checked')){
                        dataEti = 1;
                    }
                }
                //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allVals = [];
                var yrs = "";
                $('#c_b :checked').each(function() {
                    allVals.push($(this).val());
                });
                yrs = allVals.join();
                $("#anios").val(yrs);

                //alert($("#anios").val());
                $(document).ready(function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Graph/GetGraphDataTuned',
                        data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph5','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                        contentType: "application/json",
                        dataType: 'json',
                        success: function (data) {
                            var json_obj = JSON.parse(data);
                            jsonX = JSON.parse(data);
                            var chartData = [];
                            $.each(jsonX, function(index, element) {
                                $.each(element.graphData.graphDataItem, function(index2, element2) {
                                    chartData.push({
                                        estadio: element2.estadio,
                                        serie1: element2.serie1,
                                        serie2: element2.serie2,
                                        serie3: element2.serie3,
                                        serie4: element2.serie4,
                                        serie5: element2.serie5,
                                        serie6: element2.serie6,
                                        serie7: element2.serie7,
                                        serie8: element2.serie8,
                                        serie9: element2.serie9,
                                        serie10: element2.serie10
                                    });
                                });

                            });

                            var chart = AmCharts.makeChart("divGraph5", {
                                "type": "serial",
                                "theme": "light",
                                "mouseWheelZoomEnabled":false,
                                "legend": {
                                    "horizontalGap": 10,
                                    "maxColumns": 1,
                                    "position": "right",
                                    "useGraphSettings": true,
                                    "markerSize": 10
                                },
                                "titles":   [
                                                {
                                                    "text": jsonX.graph.graphTitle,
                                                    "size": 15
                                                }
                                ],
                                "dataProvider": chartData,
                                "synchronizeGrid":true,
                                "valueAxes": [{
                                    "id":"v1",
                                    "axisColor": "#FF6600",
                                    "axisThickness": 2,
                                    "axisAlpha": 1,
                                    "stackType": "regular",
                                    "position": "left",
                                    "gridAlpha": 0,
                                    "title":jsonX.graph.graphYAxisTitle
                                }],
                                "graphs": [{
                                    /*Otros*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#7f7f7f",
                                    "title": jsonX.graph.graphSeries1Label,
                                    "valueField": "serie1",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Adenovirus*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ff99ff",
                                    "title": jsonX.graph.graphSeries2Label,
                                    "valueField": "serie2",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*VSR*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#0070c0",
                                    "title": jsonX.graph.graphSeries3Label,
                                    "valueField": "serie3",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Parainfluenza*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#7030a0",
                                    "title": jsonX.graph.graphSeries4Label,
                                    "valueField": "serie4",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza B*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#99cc00",
                                    "title": jsonX.graph.graphSeries5Label,
                                    "valueField": "serie5",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A/H3*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#00b0f0",
                                    "title": jsonX.graph.graphSeries6Label,
                                    "valueField": "serie6",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A h1*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ff0000",
                                    "title": jsonX.graph.graphSeries7Label,
                                    "valueField": "serie7",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A no subtipificable*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#000000",
                                    "title": jsonX.graph.graphSeries8Label,
                                    "valueField": "serie8",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza A no suptipificada*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ffff00",
                                    "title": jsonX.graph.graphSeries9Label,
                                    "valueField": "serie9",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }, {
                                    /*Influenza AH1N1*/
                                    "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                    "fillAlphas": 1,
                                    "labelText": "[[value]]",
                                    "lineAlpha": 0.3,
                                    "type": "column",
                                    "valueAxis": "v1",
                                    "lineColor": "#ff9900",
                                    "title": jsonX.graph.graphSeries10Label,
                                    "valueField": "serie10",
                                    "type": "column",
                                    "fillAlphas": 1,
                                    "balloonFunction": function(info) {
                                        if (info.values.value){
                                            return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                        }
                                        else
                                            return '';
                                    }
                                }
                                ],
                                "chartScrollbar": {},
                                "chartCursor": {
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "estadio",
                                "categoryAxis": {
                                    "parseDates": false,
                                    "axisColor": "#DADADA",
                                    "minorGridEnabled": true,
                                    "title":jsonX.graph.graphXAxisTitle
                                },
                                /*"export": {
                                    "enabled": true,
                                    "position": "top-right"
                                    }*/
                                "export": {
                                    "enabled": true,
                                    "menu": [ {
                                        "class": "export-main",
                                        "menu": [ {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                            "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                        },
                                        {
                                            "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                            "format": "PRINT"
                                        }]
                                    }]
                                }
                            });

                            //chart.addListener("dataUpdated", zoomChart);
                            chart.addListener("rendered", zoomChart);
                            zoomChart();
                            function zoomChart(){
                                chart.zoomToIndexes(0, chart.dataProvider.length);
                            }
                            //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                        }
                    });
                })
            };

        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph5 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph5 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }

            
        </style>
        <div id="containerGraph5">
            <!--Inicio de gráficas-->
            <!--button onclick="GetGraphData5()">Generate</button-->

            <div id="loaderGraph5" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph5"></div>
        </div>

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 5 - Epidemiológico 5xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 11 - Casos IRAG x GE xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
                var jsonX;

                function GetGraphData11() {
                    if(GraphCountryID == 25){
                        GetGraphData11_25();
                        return '';
                    }
                    //****
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    //****
                    $("#divGraph11").hide();
                    $("#loaderGraph11").show();
                    //**** Parametros
                    if($("#chkCountry").is(':checked')){
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //**** Anios
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);
                    //****
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph11','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph11").show();
                                $("#loaderGraph11").hide();
                                //****
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2,
                                            serie3: element2.serie3,
                                            serie4: element2.serie4,
                                            serie5: element2.serie5,
                                            serie6: element2.serie6
                                        });
                                    });
                                });
                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------
                                var chart = AmCharts.makeChart("divGraph11", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                    },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                    }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid": true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "stackType": "regular",
                                        "position": "left",
                                        "gridAlpha": 0,
                                        "integersOnly": true,
                                        "title":jsonX.graph.graphYAxisTitle
                                    }],
                                    "graphs": [
                                        {
                                        /*0 a <2 años*/
                                        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                        "fillAlphas": 1,
                                        "labelText": "[[value]]",
                                        "lineAlpha": 0.3,
                                        "type": "column",
                                        "valueAxis": "v1",
                                        "lineColor": "#00b0f0",
                                        "title": jsonX.graph.graphSeries1Label,
                                        "valueField": "serie1",
                                        "type": "column",
                                        "fillAlphas": 1,
                                        "balloonFunction": function(info) {
                                            if (info.values.value)
                                                return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                            else
                                                return '';
                                            }
                                        }, {
                                            /*2 a <5 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff99ff",
                                            "title": jsonX.graph.graphSeries2Label,
                                            "valueField": "serie2",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*5 a <19 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#0070c0",
                                            "title": jsonX.graph.graphSeries3Label,
                                            "valueField": "serie3",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*20 a <39 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#7030a0",
                                            "title": jsonX.graph.graphSeries4Label,
                                            "valueField": "serie4",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*40 a <59 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#99cc00",
                                            "title": jsonX.graph.graphSeries5Label,
                                            "valueField": "serie5",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*60 años y +*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff9900",
                                            "title": jsonX.graph.graphSeries6Label,
                                            "valueField": "serie6",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }
                                        ],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                    },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                    },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                            "menu": [{
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                            },
                                            {
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                "format": "PRINT"
                                            }]
                                        }]
                                    }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };

                function GetGraphData11_25() {
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    //****
                    $("#divGraph11").hide();
                    $("#loaderGraph11").show();
                    //**** Parametros
                    if($("#chkCountry").is(':checked')){
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //**** Anios
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);
                    //****
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph11','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph11").show();
                                $("#loaderGraph11").hide();
                                //****
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2,
                                            serie3: element2.serie3,
                                            serie4: element2.serie4,
                                            serie5: element2.serie5,
                                            serie6: element2.serie6,
                                            serie7: element2.serie7,
                                            serie8: element2.serie8
                                        });
                                    });
                                });
                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0 && chartData[i].serie8==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0 && chartData[i].serie8==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------
                                var chart = AmCharts.makeChart("divGraph11", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                    },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                    }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid": true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "stackType": "regular",
                                        "position": "left",
                                        "gridAlpha": 0,
                                        "integersOnly": true,
                                        "title":jsonX.graph.graphYAxisTitle
                                    }],
                                    "graphs": [
                                        {
                                            /*0 a <2 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#00b0f0",
                                            "title": jsonX.graph.graphSeries1Label,
                                            "valueField": "serie1",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value)
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*2 a <5 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff99ff",
                                            "title": jsonX.graph.graphSeries2Label,
                                            "valueField": "serie2",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*5 a <19 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#0070c0",
                                            "title": jsonX.graph.graphSeries3Label,
                                            "valueField": "serie3",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*20 a <39 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#7030a0",
                                            "title": jsonX.graph.graphSeries4Label,
                                            "valueField": "serie4",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*40 a <59 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#99cc00",
                                            "title": jsonX.graph.graphSeries5Label,
                                            "valueField": "serie5",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*60 años y +*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff9900",
                                            "title": jsonX.graph.graphSeries6Label,
                                            "valueField": "serie6",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*777 años y +*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#FF0000",
                                            "title": jsonX.graph.graphSeries7Label,
                                            "valueField": "serie7",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*888 años y +*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#0000FF",
                                            "title": jsonX.graph.graphSeries8Label,
                                            "valueField": "serie8",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }
                                    ],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                    },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                    },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                            "menu": [{
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                            },
                                            {
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                "format": "PRINT"
                                            }]
                                        }]
                                    }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };
        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph11 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph11 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>

        <div id="containerGraph11">
            <div id="loaderGraph11" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph11"></div>
        </div>
        <!--<script>GetGraphData11();</script>-->
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 11 - Casos IRAG x GE xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 12 - Fallecidos IRAG x GE xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
                var jsonX;

                function GetGraphData12() {
                    if(GraphCountryID == 25){
                        GetGraphData12_25();
                        return '';
                    }
                    //****
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    //****
                    $("#divGraph12").hide();
                    $("#loaderGraph12").show();
                    //**** Parametros
                    if($("#chkCountry").is(':checked')){
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //**** Anios
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);
                    //****
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph12','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph12").show();
                                $("#loaderGraph12").hide();
                                //****
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2,
                                            serie3: element2.serie3,
                                            serie4: element2.serie4,
                                            serie5: element2.serie5,
                                            serie6: element2.serie6,
                                            serie7: element2.serie7
                                        });
                                    });
                                });
                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                //*
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //*/
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------
                                var chart = AmCharts.makeChart("divGraph12", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                    },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                    }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid": true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "stackType": "regular",
                                        "position": "left",
                                        "gridAlpha": 0,
                                        "integersOnly": true,
                                        "title":jsonX.graph.graphYAxisTitle
                                    }],
                                    "graphs": [
                                        {
                                            /*0 a <2 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#00b0f0",
                                            "title": jsonX.graph.graphSeries1Label,
                                            "valueField": "serie1",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value)
                                                    //return String(info.values.value);
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*2 a <5 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff99ff",
                                            "title": jsonX.graph.graphSeries2Label,
                                            "valueField": "serie2",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*5 a <19 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#0070c0",
                                            "title": jsonX.graph.graphSeries3Label,
                                            "valueField": "serie3",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*20 a <39 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#7030a0",
                                            "title": jsonX.graph.graphSeries4Label,
                                            "valueField": "serie4",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*40 a <59 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#99cc00",
                                            "title": jsonX.graph.graphSeries5Label,
                                            "valueField": "serie5",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*60 años y +*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff9900",
                                            "title": jsonX.graph.graphSeries6Label,
                                            "valueField": "serie6",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*Edad desconocida*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff0000",
                                            "title": jsonX.graph.graphSeries7Label,
                                            "valueField": "serie7",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }
                                    ],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                    },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                    },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                            "menu": [{
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                            },
                                            {
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                "format": "PRINT"
                                            }]
                                        }]
                                    }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };

                function GetGraphData12_25() {
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    //****
                    $("#divGraph12").hide();
                    $("#loaderGraph12").show();
                    //**** Parametros
                    if($("#chkCountry").is(':checked')){
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //**** Anios
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);
                    //****
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph12','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph12").show();
                                $("#loaderGraph12").hide();
                                //****
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2,
                                            serie3: element2.serie3,
                                            serie4: element2.serie4,
                                            serie5: element2.serie5,
                                            serie6: element2.serie6,
                                            serie7: element2.serie7,
                                            serie8: element2.serie8,
                                            serie9: element2.serie9
                                        });
                                    });
                                });
                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                //*
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0 && chartData[i].serie8==0 && chartData[i].serie9==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0 && chartData[i].serie3==0 && chartData[i].serie4==0 && chartData[i].serie5==0 && chartData[i].serie6==0 && chartData[i].serie7==0 && chartData[i].serie8==0 && chartData[i].serie9==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //*/
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------
                                var chart = AmCharts.makeChart("divGraph12", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                    },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                    }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid": true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "stackType": "regular",
                                        "position": "left",
                                        "gridAlpha": 0,
                                        "integersOnly": true,
                                        "title":jsonX.graph.graphYAxisTitle
                                    }],
                                    "graphs": [
                                        {
                                        /*0 a <2 años*/
                                        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                        "fillAlphas": 1,
                                        "labelText": "[[value]]",
                                        "lineAlpha": 0.3,
                                        "type": "column",
                                        "valueAxis": "v1",
                                        "lineColor": "#00b0f0",
                                        "title": jsonX.graph.graphSeries1Label,
                                        "valueField": "serie1",
                                        "type": "column",
                                        "fillAlphas": 1,
                                        "balloonFunction": function(info) {
                                            if (info.values.value)
                                                //return String(info.values.value);
                                                return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                            else
                                                return '';
                                            }
                                        }, {
                                            /*2 a <5 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff99ff",
                                            "title": jsonX.graph.graphSeries2Label,
                                            "valueField": "serie2",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*5 a <19 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#0070c0",
                                            "title": jsonX.graph.graphSeries3Label,
                                            "valueField": "serie3",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";

                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*20 a <39 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#7030a0",
                                            "title": jsonX.graph.graphSeries4Label,
                                            "valueField": "serie4",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*40 a <59 años*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#99cc00",
                                            "title": jsonX.graph.graphSeries5Label,
                                            "valueField": "serie5",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        }, {
                                            /*60 años y +*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff9900",
                                            "title": jsonX.graph.graphSeries6Label,
                                            "valueField": "serie6",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                        },
                                            {
                                            /* GE 777*/
                                            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                            "fillAlphas": 1,
                                            "labelText": "[[value]]",
                                            "lineAlpha": 0.3,
                                            "type": "column",
                                            "valueAxis": "v1",
                                            "lineColor": "#ff0000",
                                            "title": jsonX.graph.graphSeries7Label,
                                            "valueField": "serie7",
                                            "type": "column",
                                            "fillAlphas": 1,
                                            "balloonFunction": function(info) {
                                                if (info.values.value){
                                                    return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                }
                                                else
                                                    return '';
                                            }
                                            }, {
                                                /*GE 888*/
                                                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                                "fillAlphas": 1,
                                                "labelText": "[[value]]",
                                                "lineAlpha": 0.3,
                                                "type": "column",
                                                "valueAxis": "v1",
                                                "lineColor": "#0033FF",
                                                "title": jsonX.graph.graphSeries8Label,
                                                "valueField": "serie8",
                                                "type": "column",
                                                "fillAlphas": 1,
                                                "balloonFunction": function(info) {
                                                    if (info.values.value){
                                                        return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                    }
                                                    else
                                                        return '';
                                                }
                                            }, {
                                                /*GE Deconocida*/
                                                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                                                "fillAlphas": 1,
                                                "labelText": "[[value]]",
                                                "lineAlpha": 0.3,
                                                "type": "column",
                                                "valueAxis": "v1",
                                                "lineColor": "#660000",
                                                "title": jsonX.graph.graphSeries9Label,
                                                "valueField": "serie9",
                                                "type": "column",
                                                "fillAlphas": 1,
                                                "balloonFunction": function(info) {
                                                    if (info.values.value){
                                                        return "<b>"+info.graph.legendTextReal+"</b><br><span style='font-size:14px'>" + info.category + ": <b>"+info.values.value+"</b></span>";
                                                    }
                                                    else
                                                        return '';
                                                }
                                            }
                                        ],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                    },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                    },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                            "menu": [{
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                            },
                                            {
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                "format": "PRINT"
                                            }]
                                        }]
                                    }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };
        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph12 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph12 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>

        <div id="containerGraph12">
            <div id="loaderGraph12" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph12"></div>
        </div>
        <!--<script>GetGraphData12();</script>-->
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 12 - Fallecidos IRAG x GE xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 9 - ETI 1 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
                var jsonX;

                function GetGraphData9() {
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    //***
                    $("#divGraph9").hide();
                    $("#loaderGraph9").show();
                    //*** Parametros
                    if($("#chkCountry").is(':checked')){
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //*** Anios
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);
                    //***
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph9','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph9").show();
                                $("#loaderGraph9").hide();
                                //****
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2
                                        });
                                    });
                                });

                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------

                                var chart = AmCharts.makeChart("divGraph9", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                    },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                    }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid":true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "position": "left",
                                        "integersOnly": true,
                                        "title":jsonX.graph.graphYAxisTitle
                                        },{
                                        "id":"v2",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "position": "right",
                                        "title":jsonX.graph.graphYAxisTitle2
                                        }],
                                    "graphs": [{
                                        /*Numero de casos ETI*/
                                        "valueAxis": "v1",
                                        "lineColor": "#00b0f0",
                                        "title": jsonX.graph.graphSeries1Label,
                                        "valueField": "serie1",
                                        "type": "column",
                                        "fillAlphas": 1,
                                        "balloonFunction": function(info) {
                                            if (info.values.value)
                                                return String(info.values.value);
                                            else
                                                return '';
                                            }
                                        },
                                        {
                                        /*% ETI del total de consultas*/
                                        "valueAxis": "v2",
                                        "lineColor": "#000000",
                                        "bullet": "round",
                                        "bulletBorderThickness": 1,
                                        "hideBulletsCount": 40,
                                        "title": jsonX.graph.graphSeries2Label,
                                        "valueField": "serie2",
                                        "type": "line",
                                        "fillAlphas": 0,
                                        "balloonFunction": function(info) {
                                            if (info.values.value)
                                                return String(info.values.value) + "%";
                                            else
                                                return '';
                                            }
                                        }],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                        },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                        },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                            "menu": [{
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                            },
                                            {
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                "format": "PRINT"
                                            }]
                                        }]
                                        }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };
        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph9 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph9 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>

        <div id="containerGraph9">
            <div id="loaderGraph9" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph9"></div>
        </div>
        <!--<script>GetGraphData9();</script>-->
        <!--xxxxxxxxxxxxxxxxxxxxxx"integersOnly": true,xxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 9 - ETI 1 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráfica 10 - ETI 2 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script>
                var jsonX;

                function GetGraphData10() {
                    var dataRegion = 0;
                    var dataHospital = 0;
                    var dataIrag = 0;
                    var dataEti = 0;
                    //****
                    $("#divGraph10").hide();
                    $("#loaderGraph10").show();
                    //**** Parametros
                    if($("#chkCountry").is(':checked')){
                        dataRegion = 0;
                        dataHospital = 0;
                        dataIrag = 0;
                        dataEti = 0;
                    }
                    else{
                        dataRegion = $("#Regions option:selected").val();
                        dataHospital = $("#Hospitals option:selected").val();
                        if($("#chkIrag").is(':checked')){
                            dataIrag = 1;
                        }
                        if($("#chkEti").is(':checked')){
                            dataEti = 1;
                        }
                    }
                    //**** Anios
                    var allVals = [];
                    var yrs = "";
                    $('#c_b :checked').each(function() {
                        allVals.push($(this).val());
                    });
                    yrs = allVals.join();
                    $("#anios").val(yrs);
                    //****
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetGraphDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#anios").val() + "','Graph':'Graph10','RegionID':'" + dataRegion + "', 'HospitalID':'" + dataHospital + "', 'IRAG':'" + dataIrag + "', 'ETI':'" + dataEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                $("#divGraph10").show();
                                $("#loaderGraph10").hide();
                                //****
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                $.each(jsonX, function(index, element) {
                                    $.each(element.graphData.graphDataItem, function(index2, element2) {
                                        chartData.push({
                                            semana: element2.semana,
                                            serie1: element2.serie1,
                                            serie2: element2.serie2
                                        });
                                    });
                                });

                                //-----------------Quita los ceros del fin y del inicio del array----------------------
                                chartDataLength = chartData.length;
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartDataLength = chartData.length;
                                //alert(chartDataLength);
                                chartData.reverse();
                                if(chartDataLength>0){
                                    for(i = chartDataLength-1; i>0;i--){
                                        //alert(chartData[i].semana);
                                        if(chartData[i].serie1==0 && chartData[i].serie2==0){
                                            chartData.pop();
                                        }
                                        else{
                                            break;
                                        }
                                    }
                                }
                                chartData.reverse();
                                //-----------------FIN de Quita los ceros del fin y del inicio del array----------------------

                                var chart = AmCharts.makeChart("divGraph10", {
                                    "type": "serial",
                                    "theme": "light",
                                    "mouseWheelZoomEnabled":false,
                                    "legend": {
                                        "useGraphSettings": true
                                    },
                                    "titles": [{
                                        "text": jsonX.graph.graphTitle,
                                        "size": 15
                                    }],
                                    "dataProvider": chartData,
                                    "synchronizeGrid":true,
                                    "valueAxes": [{
                                        "id":"v1",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "position": "left",
                                        "integersOnly": true,
                                        "title":jsonX.graph.graphYAxisTitle
                                    },{
                                        "id":"v2",
                                        "axisColor": "#FF6600",
                                        "axisThickness": 2,
                                        "axisAlpha": 1,
                                        "position": "right",
                                        "title":jsonX.graph.graphYAxisTitle2
                                    }],
                                    "graphs": [{
                                        /*Casos ETI influenza (+)*/
                                        "valueAxis": "v1",
                                        "lineColor": "#00b0f0",
                                        "title": jsonX.graph.graphSeries1Label,
                                        "valueField": "serie1",
                                        "type": "column",
                                        "fillAlphas": 1,
                                        "balloonFunction": function(info) {
                                            if (info.values.value)
                                                return String(info.values.value);
                                            else
                                                return '';
                                            }
                                        },
                                        {
                                        /*% Casos influenza (+) del total de ETI con muestra*/
                                        "valueAxis": "v2",
                                        "lineColor": "#000000",
                                        "bullet": "round",
                                        "bulletBorderThickness": 1,
                                        "hideBulletsCount": 40,
                                        "title": jsonX.graph.graphSeries2Label,
                                        "valueField": "serie2",
                                        "type": "line",
                                        "fillAlphas": 0,
                                        "balloonFunction": function(info) {
                                            if (info.values.value)
                                                return String(info.values.value) + "%";
                                            else
                                                return '';
                                            }
                                        }],
                                    "chartScrollbar": {},
                                    "chartCursor": {
                                        "cursorPosition": "mouse"
                                    },
                                    "categoryField": "semana",
                                    "categoryAxis": {
                                        "parseDates": false,
                                        "axisColor": "#DADADA",
                                        "minorGridEnabled": true,
                                        "title":jsonX.graph.graphXAxisTitle
                                    },
                                    /*"export": {
                                        "enabled": true,
                                        "position": "top-right"
                                    },*/
                                    "export": {
                                        "enabled": true,
                                        "menu": [{
                                            "class": "export-main",
                                            "menu": [{
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportDownloadTitle"))",
                                                "menu": [ "PNG", "JPG", "PDF","SVG" ]
                                            },
                                            {
                                                "label": "@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",
                                                "format": "PRINT"
                                            }]
                                        }]
                                    }
                                });

                                //chart.addListener("dataUpdated", zoomChart);
                                chart.addListener("rendered", zoomChart);
                                zoomChart();
                                function zoomChart(){
                                    chart.zoomToIndexes(0, chart.dataProvider.length);
                                }
                                //chart.zoomToIndexes(chart.dataProvider.length - 10, chart.dataProvider.length - 1);
                            }
                        });
                    })
                };
        </script>

        <style>
            .loaderGraph {
                display: block;
                position: fixed;
                z-index: 1000;
                top: 0;
                left: 0;
                width: 750px;
                height: 600px;
                background: rgba( 255, 255, 255, .8 ) url('/Content/themes/base/images/ajax-loader.gif') 50% 50% no-repeat;
            }

            #divGraph10 {
                display: none;
                width: 100%;
                height: 600px;
            }

            #containerGraph10 {
                border: solid #e4e4e4 1px;
                width: 48%;
                float: left;
                margin: 5px;
            }
        </style>

        <div id="containerGraph10">
            <div id="loaderGraph10" class="loaderGraph"><!-- Place at bottom of page --></div>
            <div id="divGraph10"></div>
        </div>
        <!--<script>GetGraphData10();</script>-->
        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIN Gráfica 10 - ETI 2 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
    <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxControles para los mapasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
                <script>
                /**
                 * This demo uses our own method of determining user's location
                 * It is not public web service that you can use
                 * You'll need to find your own. We recommend http://www.maxmind.com
                 */
                var expandedMap = false;

                function showCheckboxesMap() {
                    var checkboxes = document.getElementById("map_c_b");
                    if (!expandedMap) {
                        checkboxes.style.display = "block";
                        expandedMap = true;
                    } else {
                        checkboxes.style.display = "none";
                        expandedMap = false;
                    }
                };

                function addMapCheckbox(yval) {
                    var container = $('#map_c_b');
                    if(yval!=undefined){

                    $('<input />', { type: 'checkbox', id: 'cb'+yval, value: yval, class:'yearCheckBox' }).appendTo(container);
                    $('<label />', { 'for': 'cb'+yval, text: yval, class:'labelYearCheckBox' }).appendTo(container);
                    $('<br />', { class:'labelYearCheckBox' }).appendTo(container);
                    }
                }

                function GetDataYearsMap() {

                    //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                    var allVals = [];
                    var yrs = "";


                    //alert($("#anios").val());
                    $(document).ready(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/Graph/GetYears',
                            data: "{'CountryID':" + GraphCountryID +"}",
                            contentType: "application/json",
                            dataType: 'json',
                            async: true,
                            success: function (data) {
                                var json_obj = JSON.parse(data);
                                jsonX = JSON.parse(data);
                                var chartData = [];
                                console.log("jsonX");
                                console.log(jsonX);
                                $.each(jsonX, function(index, element) {

                                    //alert(element);
                                    addMapCheckbox(element);

                                });
                            }
                        });
                    })
                }
                </script>
                <script>GetDataYearsMap();</script>
                <!--Mapa 1 Contenedor-->
                <div id="containerMapControl0">
                    <div id="subcontainerMapControl0">
                        <input id="chkMapIrag" type="checkbox" value="irag"  />@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphSARICheckboxLabel"))
                        <input id="chkMapEti" type="checkbox" value="eti"  />@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphILICheckboxLabel"))
                    </div>

                    <div id="subcontainerMapControl1">
                        <div class='input-group' id="selectYears">
                            <div id="labelMapYearsContainer" class="input-group-addon">@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphYearsSelect"))</div>
                            <div id="yearsMapContainer">
                                <div id="fakeMapSelectYear" onclick="showCheckboxesMap()">
                                    <select id="selectMapYearFake" class="form-control">
                                        <option selected>@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphYearsOptionSelect"))</option>
                                    </select>
                                    <div class="overSelect"></div>
                                </div>
                                <div id="map_c_b" class="form-control">
                                </div>
                            </div>
                        </div>

                        <input type="text" style="display:none;" id="mapanios" value="2017" />
                        <div><button id="btnGetMapData1" onclick="GetMapData1();GetMapData2();">@(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphUpdateButton"))</button></div>
                        <!--div id="c_b" style="display:block;">
                    Años:
                        </div-->
                    </div>

                </div>
        <!---xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx MAPA 1 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx--->
        <!-- Chart code -->
        <script>
            function GetMapData1() {
                var dataMapIrag = 0;
                var dataMapEti = 0;

                if($("#chkMapIrag").is(':checked')){
                    dataMapIrag = 1;
                        }
                if($("#chkMapEti").is(':checked')){
                    dataMapEti = 1;
                        }

                            //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allMapVals = [];
                var yrsMap = "";
                $('#map_c_b :checked').each(function() {
                    allMapVals.push($(this).val());
                        });
                yrsMap = allMapVals.join();
                $("#mapanios").val(yrsMap);

                var defaultMap = "usaLow";
                var countryMaps = {
                    "AF": [ "afghanistanLow" ],
                    "AL": [ "albaniaLow" ],
                    "DZ": [ "algeriaLow" ],
                    "AD": [ "andorraLow" ],
                    "AO": [ "angolaLow" ],
                    "AR": [ "argentinaLow" ],
                    "AM": [ "armeniaLow" ],
                    "AU": [ "australiaLow" ],
                    "AT": [ "austriaLow" ],
                    "AZ": [ "azerbaijanLow" ],
                    "BS": [ "bahamasLow" ],
                    "BH": [ "bahrainLow" ],
                    "BD": [ "bangladeshLow" ],
                    "BY": [ "belarusLow" ],
                    "BE": [ "belgiumLow" ],
                    "BZ": [ "belizeLow" ],
                    "BT": [ "bhutanLow" ],
                    "BO": [ "boliviaLow" ],
                    "BA": [ "bosniaHerzegovinaCantonsLow" ],
                    "BW": [ "botswanaLow" ],
                    "BR": [ "brazilLow" ],
                    "BN": [ "bruneiDarussalamLow" ],
                    "BG": [ "bulgariaLow" ],
                    "BF": [ "burkinaFasoLow" ],
                    "BI": [ "burundiLow" ],
                    "KH": [ "cambodiaLow" ],
                    "CM": [ "cameroonLow" ],
                    "CA": [ "canadaLow" ],
                    "CV": [ "capeVerdeLow" ],
                    "CF": [ "centralAfricanRepublicLow" ],
                    "TD": [ "chadLow" ],
                    "CL": [ "chileLow" ],
                    "CN": [ "chinaLow" ],
                    "CO": [ "colombiaLow" ],
                    "CD": [ "congoDRLow" ],
                    "CG": [ "congoLow" ],
                    "CR": [ "costaRicaLow" ],
                    "HR": [ "croatiaLow" ],
                    "CU": [ "cubaLow" ],
                    "CY": [ "cyprusLow" ],
                    "UN": [ "cyprusNorthernCyprusLow" ],
                    "GB": [ "unitedKingdomLow" ],
                    "CZ": [ "czechRepublicLow" ],
                    "DK": [ "denmarkLow" ],
                    "DJ": [ "djiboutiLow" ],
                    "DO": [ "dominicanRepublicLow" ],
                    "EC": [ "ecuadorLow" ],
                    "EG": [ "egyptLow" ],
                    "SV": [ "elSalvadorLow" ],
                    "EE": [ "estoniaLow" ],
                    "FI": [ "finlandLow" ],
                    "FR": [ "france2016Low" ],
                    "GE": [ "georgiaLow" ],
                    "DE": [ "germanyLow" ],
                    "GR": [ "greeceLow" ],
                    "GT": [ "guatemalaLow" ],
                    "GN": [ "guineaLow" ],
                    "GY": [ "guyanaLow" ],
                    "HT": [ "haitiLow" ],
                    "HN": [ "hondurasLow" ],
                    "HK": [ "hongKongLow" ],
                    "HU": [ "hungaryLow" ],
                    "GL": [ "icelandLow" ],
                    "IS": [ "icelandLow" ],
                    "IN": [ "indiaLow" ],
                    "ID": [ "indonesiaLow" ],
                    "MY": [ "malaysiaLow" ],
                    "IR": [ "iranLow" ],
                    "IQ": [ "iraqLow" ],
                    "IE": [ "irelandLow" ],
                    "IL": [ "israelLow" ],
                    "PS": [ "palestineLow" ],
                    "VA": [ "italyLow" ],
                    "SM": [ "sanMarinoLow" ],
                    "MT": [ "italyLow" ],
                    "IT": [ "italyLow" ],
                    "JM": [ "jamaicaLow" ],
                    "JP": [ "japanLow" ],
                    "KZ": [ "kazakhstanLow" ],
                    "KE": [ "kenyaLow" ],
                    "XK": [ "kosovoLow" ],
                    "KG": [ "kyrgyzstanLow" ],
                    "LA": [ "laosLow" ],
                    "LV": [ "latviaLow" ],
                    "LT": [ "lithuaniaLow" ],
                    "LU": [ "luxembourgLow" ],
                    "MK": [ "macedoniaLow" ],
                    "ML": [ "maliLow" ],
                    "MX": [ "mexicoLow" ],
                    "MD": [ "moldovaLow" ],
                    "MN": [ "mongoliaLow" ],
                    "ME": [ "montenegroLow" ],
                    "MA": [ "moroccoLow" ],
                    "MM": [ "myanmarLow" ],
                    "NP": [ "nepalLow" ],
                    "NL": [ "netherlandsLow" ],
                    "NZ": [ "newZealandLow" ],
                    "NI": [ "nicaraguaLow" ],
                    "NG": [ "nigeriaLow" ],
                    "NO": [ "norwayLow" ],
                    "AE": [ "unitedArabEmiratesLow" ],
                    "OM": [ "omanLow" ],
                    "PK": [ "pakistanLow" ],
                    "PA": [ "panamaLow" ],
                    "PY": [ "paraguayLow" ],
                    "PE": [ "peruLow" ],
                    "PH": [ "philippinesLow" ],
                    "PL": [ "polandLow" ],
                    "PT": [ "portugalLow" ],
                    "PR": [ "puertoRicoLow" ],
                    "US": [ "usaLow" ],
                    "QA": [ "qatarLow" ],
                    "RO": [ "romaniaLow" ],
                    "RW": [ "rwandaLow" ],
                    "SA": [ "saudiArabiaLow" ],
                    "RS": [ "serbiaLow" ],
                    "SG": [ "singaporeLow" ],
                    "SK": [ "slovakiaLow" ],
                    "SI": [ "sloveniaLow" ],
                    "LS": [ "southAfricaLow" ],
                    "ZA": [ "southAfricaLow" ],
                    "KR": [ "southKoreaLow" ],
                    "ES": [ "spainLow" ],
                    "LK": [ "sriLankaLow" ],
                    "SR": [ "surinameLow" ],
                    "SE": [ "swedenLow" ],
                    "CH": [ "switzerlandLow" ],
                    "SY": [ "syriaLow" ],
                    "TW": [ "taiwanLow" ],
                    "TJ": [ "tajikistanLow" ],
                    "TH": [ "thailandLow" ],
                    "TR": [ "turkeyLow" ],
                    "UG": [ "ugandaLow" ],
                    "UA": [ "ukraineLow" ],
                    "GG": [ "unitedKingdomLow" ],
                    "JE": [ "unitedKingdomLow" ],
                    "IM": [ "unitedKingdomLow" ],
                    "UY": [ "uruguayLow" ],
                    "UZ": [ "uzbekistanLow" ],
                    "VE": [ "venezuelaLow" ],
                    "VN": [ "vietnamLow" ],
                    "YE": [ "yemenLow" ]
                        };



                            //------------------------------------------------------------------------------
                $(document).ready(function () {
                    $.ajax({
                            type: 'POST',
                            url: '/Graph/GetMapDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#mapanios").val() + "','Graph':'GetMapData1', 'IRAG':'" + dataMapIrag + "', 'ETI':'" + dataMapEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            async: true,
                            success: function (data) {
                            //console.log(data);
                            var jsonX = JSON.parse(data);
                            console.log(jsonX);
                            var chartData = [];
                            var chartTitle = jsonX.map.mapTitle;
                            var chartCountry = jsonX.map.mapCountry;
                            //alert(chartTitle);
                            //alert(chartCountry);
                            $.each(jsonX, function(index, element) {
                            //alert(JSON.stringify(element.mapData));
                                $.each(element.mapData.areaData, function(index2, element2) {
                            //alert(JSON.stringify(element2));
                                    chartData.push({
                            area: element2.area,
                            infA: element2.infA,
                            infB: element2.infB,
                            vrs: element2.vrs,
                            ah1n1: element2.ah1n1,
                            ah3: element2.ah3,
                            total: (parseInt(element2.infA) + parseInt(element2.infB) + parseInt(element2.vrs) + parseInt(element2.ah1n1) + parseInt(element2.ah3))
                        });
                        });
                        });
                            console.log("chartData");
                            console.log(chartData);
                            // calculate which map to be used
                            var currentMap = defaultMap;
                            var titles = [];
                            currentMap = countryMaps[ chartCountry ][ 0 ];
                            titles.push( {
                                "text": chartTitle
                        } );
                            //----------mapa--------------------
                            var map = AmCharts.makeChart( "mapDivGraph1", {
                                "type": "map",
                                "theme": "light",
                                "colorSteps": 10,
                                "dataProvider": {
                                    "mapURL": "/Scripts/ammap/maps/svg/" + currentMap + ".svg",
                                    "getAreasFromMap": true,
                                    "zoomLevel": 0.9,
                                    "areas": []
                        },
                                "areasSettings": {
                                    "autoZoom": true,
                                    "balloonText": "[[title]]: <br/><strong>[[description]]</strong>",
                            color: "#FFCC00",
                            colorSolid: "#990000"
                        },
                                "valueLegend": {
                                    "right": 10,
                                    "minValue": "-",
                                    "maxValue": "+"
                        },
                                "zoomControl": {
                                    "minZoomLevel": 0.9
                        },
                                "titles": titles,
                                "listeners": [ {
                                    "event": "init",
                                    "method": updateHeatmap
                        } ]
                        } );


                            function updateHeatmap( event ) {
                                var map = event.chart;
                                if ( map.dataGenerated )
                                    return;
                            //alert(map.dataProvider.areas.length);
                                if ( map.dataProvider.areas.length === 0 ) {
                                    setTimeout( updateHeatmap, 100 );
                                    return;
                        }
                                console.log(chartData);
                                for ( var i = 0; i < map.dataProvider.areas.length; i++ ) {
                            //alert(map.dataProvider.areas.length);
                            //alert(chartData[i].area.valueOf());
                                    var A = chartData[i].infA.valueOf();
                                    var B = chartData[i].infB.valueOf();
                                    var VRS = chartData[i].vrs.valueOf();
                                    var AH1N1 = chartData[i].ah1n1.valueOf();
                                    var AH3 = chartData[i].ah3.valueOf();
                                    var total = chartData[i].total.valueOf();
                                    map.dataProvider.areas[ i ].description = "Influenza A: " + A + "<br/>Influenza B: " + B + "<br/>VRS: " + VRS + "<br/>AH1N1: " + AH1N1 + "<br/>AH3: " + AH3 + "<br/>Total: "+ total;//Math.round( Math.random() * 10000 );
                                    map.dataProvider.areas[ i ].value = total;
                        }
                                map.dataGenerated = true;
                                map.validateNow();
                        }
                            //----------fin mapa----------------
                        }
                        })
                        })



                            //"text": jsonX.graph.graphTitle,
                            //"title":jsonX.graph.graphYAxisTitle
                            //"label": "(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",


                            //------------------------------------------------------------------------------


                        };
    </script>
    
    
    <!---xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx MAPA 2 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx--->
    <!-- Chart code -->
    <script>
            function GetMapData2() {
                var dataMapIrag = 0;
                var dataMapEti = 0;

                if($("#chkMapIrag").is(':checked')){
                    dataMapIrag = 1;
                        }
                if($("#chkMapEti").is(':checked')){
                    dataMapEti = 1;
                        }

                            //Esta sección sirve para consolidar los años seleccionados en un string separado por comas
                var allMapVals = [];
                var yrsMap = "";
                $('#map_c_b :checked').each(function() {
                    allMapVals.push($(this).val());
                        });
                yrsMap = allMapVals.join();
                $("#mapanios").val(yrsMap);

                var defaultMap = "usaLow";
                var countryMaps = {
                    "AF": [ "afghanistanLow" ],
                    "AL": [ "albaniaLow" ],
                    "DZ": [ "algeriaLow" ],
                    "AD": [ "andorraLow" ],
                    "AO": [ "angolaLow" ],
                    "AR": [ "argentinaLow" ],
                    "AM": [ "armeniaLow" ],
                    "AU": [ "australiaLow" ],
                    "AT": [ "austriaLow" ],
                    "AZ": [ "azerbaijanLow" ],
                    "BS": [ "bahamasLow" ],
                    "BH": [ "bahrainLow" ],
                    "BD": [ "bangladeshLow" ],
                    "BY": [ "belarusLow" ],
                    "BE": [ "belgiumLow" ],
                    "BZ": [ "belizeLow" ],
                    "BT": [ "bhutanLow" ],
                    "BO": [ "boliviaLow" ],
                    "BA": [ "bosniaHerzegovinaCantonsLow" ],
                    "BW": [ "botswanaLow" ],
                    "BR": [ "brazilLow" ],
                    "BN": [ "bruneiDarussalamLow" ],
                    "BG": [ "bulgariaLow" ],
                    "BF": [ "burkinaFasoLow" ],
                    "BI": [ "burundiLow" ],
                    "KH": [ "cambodiaLow" ],
                    "CM": [ "cameroonLow" ],
                    "CA": [ "canadaLow" ],
                    "CV": [ "capeVerdeLow" ],
                    "CF": [ "centralAfricanRepublicLow" ],
                    "TD": [ "chadLow" ],
                    "CL": [ "chileLow" ],
                    "CN": [ "chinaLow" ],
                    "CO": [ "colombiaLow" ],
                    "CD": [ "congoDRLow" ],
                    "CG": [ "congoLow" ],
                    "CR": [ "costaRicaLow" ],
                    "HR": [ "croatiaLow" ],
                    "CU": [ "cubaLow" ],
                    "CY": [ "cyprusLow" ],
                    "UN": [ "cyprusNorthernCyprusLow" ],
                    "GB": [ "unitedKingdomLow" ],
                    "CZ": [ "czechRepublicLow" ],
                    "DK": [ "denmarkLow" ],
                    "DJ": [ "djiboutiLow" ],
                    "DO": [ "dominicanRepublicLow" ],
                    "EC": [ "ecuadorLow" ],
                    "EG": [ "egyptLow" ],
                    "SV": [ "elSalvadorLow" ],
                    "EE": [ "estoniaLow" ],
                    "FI": [ "finlandLow" ],
                    "FR": [ "france2016Low" ],
                    "GE": [ "georgiaLow" ],
                    "DE": [ "germanyLow" ],
                    "GR": [ "greeceLow" ],
                    "GT": [ "guatemalaLow" ],
                    "GN": [ "guineaLow" ],
                    "GY": [ "guyanaLow" ],
                    "HT": [ "haitiLow" ],
                    "HN": [ "hondurasLow" ],
                    "HK": [ "hongKongLow" ],
                    "HU": [ "hungaryLow" ],
                    "GL": [ "icelandLow" ],
                    "IS": [ "icelandLow" ],
                    "IN": [ "indiaLow" ],
                    "ID": [ "indonesiaLow" ],
                    "MY": [ "malaysiaLow" ],
                    "IR": [ "iranLow" ],
                    "IQ": [ "iraqLow" ],
                    "IE": [ "irelandLow" ],
                    "IL": [ "israelLow" ],
                    "PS": [ "palestineLow" ],
                    "VA": [ "italyLow" ],
                    "SM": [ "sanMarinoLow" ],
                    "MT": [ "italyLow" ],
                    "IT": [ "italyLow" ],
                    "JM": [ "jamaicaLow" ],
                    "JP": [ "japanLow" ],
                    "KZ": [ "kazakhstanLow" ],
                    "KE": [ "kenyaLow" ],
                    "XK": [ "kosovoLow" ],
                    "KG": [ "kyrgyzstanLow" ],
                    "LA": [ "laosLow" ],
                    "LV": [ "latviaLow" ],
                    "LT": [ "lithuaniaLow" ],
                    "LU": [ "luxembourgLow" ],
                    "MK": [ "macedoniaLow" ],
                    "ML": [ "maliLow" ],
                    "MX": [ "mexicoLow" ],
                    "MD": [ "moldovaLow" ],
                    "MN": [ "mongoliaLow" ],
                    "ME": [ "montenegroLow" ],
                    "MA": [ "moroccoLow" ],
                    "MM": [ "myanmarLow" ],
                    "NP": [ "nepalLow" ],
                    "NL": [ "netherlandsLow" ],
                    "NZ": [ "newZealandLow" ],
                    "NI": [ "nicaraguaLow" ],
                    "NG": [ "nigeriaLow" ],
                    "NO": [ "norwayLow" ],
                    "AE": [ "unitedArabEmiratesLow" ],
                    "OM": [ "omanLow" ],
                    "PK": [ "pakistanLow" ],
                    "PA": [ "panamaLow" ],
                    "PY": [ "paraguayLow" ],
                    "PE": [ "peruLow" ],
                    "PH": [ "philippinesLow" ],
                    "PL": [ "polandLow" ],
                    "PT": [ "portugalLow" ],
                    "PR": [ "puertoRicoLow" ],
                    "US": [ "usaLow" ],
                    "QA": [ "qatarLow" ],
                    "RO": [ "romaniaLow" ],
                    "RW": [ "rwandaLow" ],
                    "SA": [ "saudiArabiaLow" ],
                    "RS": [ "serbiaLow" ],
                    "SG": [ "singaporeLow" ],
                    "SK": [ "slovakiaLow" ],
                    "SI": [ "sloveniaLow" ],
                    "LS": [ "southAfricaLow" ],
                    "ZA": [ "southAfricaLow" ],
                    "KR": [ "southKoreaLow" ],
                    "ES": [ "spainLow" ],
                    "LK": [ "sriLankaLow" ],
                    "SR": [ "surinameLow" ],
                    "SE": [ "swedenLow" ],
                    "CH": [ "switzerlandLow" ],
                    "SY": [ "syriaLow" ],
                    "TW": [ "taiwanLow" ],
                    "TJ": [ "tajikistanLow" ],
                    "TH": [ "thailandLow" ],
                    "TR": [ "turkeyLow" ],
                    "UG": [ "ugandaLow" ],
                    "UA": [ "ukraineLow" ],
                    "GG": [ "unitedKingdomLow" ],
                    "JE": [ "unitedKingdomLow" ],
                    "IM": [ "unitedKingdomLow" ],
                    "UY": [ "uruguayLow" ],
                    "UZ": [ "uzbekistanLow" ],
                    "VE": [ "venezuelaLow" ],
                    "VN": [ "vietnamLow" ],
                    "YE": [ "yemenLow" ]
                        };



                            //------------------------------------------------------------------------------
                $(document).ready(function () {
                    $.ajax({
                            type: 'POST',
                            url: '/Graph/GetMapDataTuned',
                            data: "{'CountryID':" + GraphCountryID +",'Year':'" + $("#mapanios").val() + "','Graph':'GetMapData2', 'IRAG':'" + dataMapIrag + "', 'ETI':'" + dataMapEti + "'}",
                            contentType: "application/json",
                            dataType: 'json',
                            async: true,
                            success: function (data) {
                            //console.log(data);
                            var jsonX = JSON.parse(data);
                            console.log(jsonX);
                            var chartData = [];
                            var chartTitle = jsonX.map.mapTitle;
                            var chartCountry = jsonX.map.mapCountry;
                            //alert(chartTitle);
                            //alert(chartCountry);
                            $.each(jsonX, function(index, element) {
                            //alert(JSON.stringify(element.mapData));
                                $.each(element.mapData.areaData, function(index2, element2) {
                            //alert(JSON.stringify(element2));
                                    chartData.push({
                            area: element2.area,                            
                            ah1n1: element2.ah1n1,
                            ah3: element2.ah3,
                            total: (parseInt(element2.ah1n1) + parseInt(element2.ah3))
                        });
                        });
                        });
                            console.log("chartData");
                            console.log(chartData);
                            // calculate which map to be used
                            var currentMap = defaultMap;
                            var titles = [];
                            currentMap = countryMaps[ chartCountry ][ 0 ];
                            titles.push( {
                                "text": chartTitle
                        } );
                            //----------mapa--------------------
                            var map = AmCharts.makeChart( "mapDivGraph2", {
                                "type": "map",
                                "theme": "light",
                                "colorSteps": 10,
                                "dataProvider": {
                                    "mapURL": "/Scripts/ammap/maps/svg/" + currentMap + ".svg",
                                    "getAreasFromMap": true,
                                    "zoomLevel": 0.9,
                                    "areas": []
                        },
                                "areasSettings": {
                                    "autoZoom": true,
                                    "balloonText": "[[title]]: <br/><strong>[[description]]</strong>",
                            color: "#FFCC00",
                            colorSolid: "#990000"
                        },
                                "valueLegend": {
                                    "right": 10,
                                    "minValue": "-",
                                    "maxValue": "+"
                        },
                                "zoomControl": {
                                    "minZoomLevel": 0.9
                        },
                                "titles": titles,
                                "listeners": [ {
                                    "event": "init",
                                    "method": updateHeatmap
                        } ]
                        } );


                            function updateHeatmap( event ) {
                                var map = event.chart;
                                if ( map.dataGenerated )
                                    return;
                            //alert(map.dataProvider.areas.length);
                                if ( map.dataProvider.areas.length === 0 ) {
                                    setTimeout( updateHeatmap, 100 );
                                    return;
                        }
                                console.log(chartData);
                                for ( var i = 0; i < map.dataProvider.areas.length; i++ ) {
                            //alert(map.dataProvider.areas.length);
                            //alert(chartData[i].area.valueOf());                                    
                                    var AH1N1 = chartData[i].ah1n1.valueOf();
                                    var AH3 = chartData[i].ah3.valueOf();
                                    var total = chartData[i].total.valueOf();
                                    map.dataProvider.areas[ i ].description = "AH1N1: " + AH1N1 + "<br/>AH3: " + AH3 + "<br/>Total: "+ total;//Math.round( Math.random() * 10000 );
                                    map.dataProvider.areas[ i ].value = total;
                        }
                                map.dataGenerated = true;
                                map.validateNow();
                        }
                            //----------fin mapa----------------
                        }
                        })
                        })



                            //"text": jsonX.graph.graphTitle,
                            //"title":jsonX.graph.graphYAxisTitle
                            //"label": "(((Paho.Controllers.PrincipalController)this.ViewContext.Controller).getMsg("viewSituationalGraphExportPrintTitle"))",


                            //------------------------------------------------------------------------------


                        };
    </script>

    <!-- HTML -->
    <script>
        addMapCheckbox($('#txtName').val());
        GetMapData1();
        GetMapData2();
    </script>
    <style>
        #mapContainerGraph1, #mapContainerGraph2{
            border: solid #e4e4e4 1px;
            width: 48%;
            float: left;
            margin: 5px;
        }

        #mapDivGraph1, #mapDivGraph2{
            display: block;
            width: 100%;
            height: 600px;
        }
    </style>
    <div id="mapContainerGraph1">
        <!--Inicio de gráficas-->
        <!--Gráfica Epidemiológica 1-->
        <!--div id="maploaderGraph1" class="loaderGraph"></div-->
        <div id="mapDivGraph1"></div>
    </div>
    <div id="mapContainerGraph2">
        <!--Inicio de gráficas-->
        <!--Gráfica Epidemiológica 1-->
        <!--div id="maploaderGraph1" class="loaderGraph"></div-->
        <div id="mapDivGraph2"></div>
    </div>

    <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx FIN MAPA 1 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <script type="text/javascript">
            var countries = @Html.Raw(Json.Encode(Model.Countries));
            var institutions = @Html.Raw(Json.Encode(Model.Institutions));
            var regions = @Html.Raw(Json.Encode(Model.Regions));
            //var CountryID =@Html.Raw(Json.Encode(Model.CountryID));
            var CountryID = @Html.Raw(Model.CountryID);
            var GraphCountryID = @Html.Raw(Model.CountryID);
        </script>

        <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGráficas previasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
        <!--/div-->
        <!--/div-->
    </div>

}
<!-- /ko -->

<!-- #### CAFQ
    <script type="text/javascript">
    var msg = "ResourcesM.ResourcesM.testMessage";
    alert("Javascript test: " + msg);
    </script>
-->